{
    "sourceFile": "src/components/AdminComponents/ReportsTable.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755523867168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755524643172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,188 +1,133 @@\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from \"@/components/ui/table\";\r\n-import { MoreHorizontal } from \"lucide-react\";\r\n-import { Label } from \"recharts\";\r\n+import React from 'react';\r\n+import { Filter, Plus, Search, Eye, UserCheck } from 'lucide-react';\r\n \r\n-export function EmergencyTable({ \r\n-  events = [], \r\n-  onStatusChange,\r\n-  isLoading = false,\r\n-  error = null,\r\n-  timeFilter = \"Today\",\r\n-  onTimeFilterChange,\r\n-  highlightConditions = [],\r\n-  \r\n-}) {\r\n-  const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n-  const [openDropdown, setOpenDropdown] = useState(null);\r\n-\r\n-  const toggleDropdown = (index) => {\r\n-    setOpenDropdown((prev) => (prev === index ? null : index));\r\n-  };\r\n-\r\n-  const handleAction = (action, event, index) => {\r\n-    console.log(`Action \"${action}\" selected for`, event);\r\n-    \r\n-    // Call the parent component's status change handler if provided\r\n-    if (onStatusChange) {\r\n-      onStatusChange(action, event, index);\r\n+export const ReportsTable = ({ reports, onFilterClick, onNewReport, onViewReport, onAssignReport }) => {\r\n+  const defaultReports = [\r\n+    {\r\n+      id: 'GBV-2024-001',\r\n+      date: '2024-08-12',\r\n+      type: 'Domestic Violence',\r\n+      status: 'New',\r\n+      urgency: 'Critical',\r\n+      location: 'Nairobi Central',\r\n+      assignedTo: 'Unassigned'\r\n+    },\r\n+    {\r\n+      id: 'GBV-2024-002',\r\n+      date: '2024-08-12',\r\n+      type: 'Sexual Harassment',\r\n+      status: 'In Progress',\r\n+      urgency: 'High',\r\n+      location: 'Westlands',\r\n+      assignedTo: 'Sarah Ochieng'\r\n+    },\r\n+    {\r\n+      id: 'GBV-2024-003',\r\n+      date: '2024-08-11',\r\n+      type: 'Physical Assault',\r\n+      status: 'Closed',\r\n+      urgency: 'Medium',\r\n+      location: 'Kasarani',\r\n+      assignedTo: 'John Mwangi'\r\n     }\r\n-    \r\n-    setOpenDropdown(null);\r\n-  };\r\n+  ];\r\n \r\n-  // Check if a row should be highlighted based on conditions\r\n-  const shouldHighlightRow = (event) => {\r\n-    if (highlightConditions.length === 0) return false;\r\n-    \r\n-    return highlightConditions.some(condition => {\r\n-      return Object.keys(condition).every(key => {\r\n-        return event[key] === condition[key];\r\n-      });\r\n-    });\r\n-  };\r\n+  const displayReports = reports || defaultReports;\r\n \r\n-  useEffect(() => {\r\n-    const handleClickOutside = (e) => {\r\n-      if (!e.target.closest(\".dropdown-parent\")) {\r\n-        setOpenDropdown(null);\r\n-      }\r\n-    };\r\n-    document.addEventListener(\"mousedown\", handleClickOutside);\r\n-    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n-  }, []);\r\n-\r\n-  // Loading state\r\n-  if (isLoading) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n+  return (\r\n+    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n+      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n         <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n+          <h3 className=\"text-lg font-semibold text-gray-900\">Recent Reports</h3>\r\n+          <div className=\"flex space-x-2\">\r\n+            <button \r\n+              onClick={onFilterClick}\r\n+              className=\"flex items-center px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n+            >\r\n+              <Filter className=\"w-4 h-4 mr-2\" />\r\n+              Filter\r\n+            </button>\r\n+            <button \r\n+              onClick={onNewReport}\r\n+              className=\"flex items-center px-3 py-2 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n+            >\r\n+              <Plus className=\"w-4 h-4 mr-2\" />\r\n+              New Report\r\n+            </button>\r\n+          </div>\r\n         </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // Error state\r\n-  if (error) {\r\n-    return (\r\n-      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-        <div className=\"flex items-center justify-between mb-4\">\r\n-          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n-        </div>\r\n-        <div className=\"flex items-center justify-center h-64\">\r\n-          <div className=\"text-red-600\">Error: {error}</div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between mb-4\">\r\n-        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n         <div className=\"relative\">\r\n-          <select \r\n-            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n-            value={timeFilter}\r\n-            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n-          >\r\n-            <option value=\"Today\">Today</option>\r\n-            <option value=\"This Week\">This Week</option>\r\n-            <option value=\"This Month\">This Month</option>\r\n-            <option value=\"This Year\">This Year</option>\r\n-          </select>\r\n+          <Search className=\"absolute left-3 top-3 w-4 h-4 text-gray-400\" />\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Search reports...\"\r\n+            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+          />\r\n         </div>\r\n       </div>\r\n-\r\n-      {/* Table */}\r\n-      <Table>\r\n-        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n-        <TableHeader>\r\n-          <TableRow>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n-            { user?.role === \"admin\" && (\r\n-            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n-            ) }\r\n-          </TableRow>\r\n-        </TableHeader>\r\n-        <TableBody>\r\n-          {events.length === 0 ? (\r\n-            <TableRow>\r\n-              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n-                No emergency events found\r\n-              </TableCell>\r\n\\ No newline at end of file\n-            </TableRow>\r\n-          ) : (\r\n-            events.map((event, index) => (\r\n-              <TableRow\r\n-                key={event.id || index}\r\n-                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n-              >\r\n-                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n-                <TableCell>{event.visitor}</TableCell>\r\n-                <TableCell>{event.type}</TableCell>\r\n-                <TableCell>{event.time}</TableCell>\r\n-                <TableCell>\r\n-                  <span\r\n-                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n-                      event.status === \"Ongoing\"\r\n-                        ? \"bg-red-100 text-red-700\"\r\n-                        : \"bg-green-100 text-green-700\"\r\n-                    }`}\r\n-                  >\r\n-                    {event.status}\r\n+      <div className=\"overflow-x-auto\">\r\n+        <table className=\"w-full\">\r\n+          <thead className=\"bg-gray-50\">\r\n+            <tr>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Case ID</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Urgency</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Location</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Assigned To</th>\r\n+              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n+            </tr>\r\n+          </thead>\r\n+          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+            {displayReports.map((report) => (\r\n+              <tr key={report.id} className=\"hover:bg-gray-50\">\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 hover:text-blue-800 cursor-pointer\">\r\n+                  {report.id}\r\n+                </td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{report.date}</td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{report.type}</td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n+                    report.status === 'New' ? 'bg-yellow-100 text-yellow-800' :\r\n+                    report.status === 'In Progress' ? 'bg-blue-100 text-blue-800' :\r\n+                    'bg-green-100 text-green-800'\r\n+                  }`}>\r\n+                    {report.status}\r\n                   </span>\r\n-                </TableCell>\r\n-                {user?.role === \"admin\" && (\r\n-                <TableCell className=\"relative dropdown-parent\">\r\n-                  <MoreHorizontal\r\n-                    className=\"cursor-pointer text-muted-foreground\"\r\n-                    onClick={() => toggleDropdown(index)}\r\n-                  />\r\n-\r\n-                  {openDropdown === index && (\r\n-                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Resolved\r\n-                      </button>\r\n-                      <button\r\n-                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n-                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n-                      >\r\n-                        Ongoing\r\n-                      </button>\r\n-                    </div>\r\n-                  )}\r\n-                </TableCell>\r\n-                 )}\r\n-              </TableRow>\r\n-\r\n-            ))\r\n-          )}\r\n-        </TableBody>\r\n-      </Table>\r\n+                </td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${\r\n+                    report.urgency === 'Critical' ? 'bg-red-100 text-red-800' :\r\n+                    report.urgency === 'High' ? 'bg-orange-100 text-orange-800' :\r\n+                    'bg-gray-100 text-gray-800'\r\n+                  }`}>\r\n+                    {report.urgency}\r\n+                  </span>\r\n+                </td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{report.location}</td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{report.assignedTo}</td>\r\n+                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n+                  <div className=\"flex space-x-2\">\r\n+                    <button \r\n+                      onClick={() => onViewReport && onViewReport(report.id)}\r\n+                      className=\"text-blue-600 hover:text-blue-900\"\r\n+                    >\r\n+                      <Eye className=\"w-4 h-4\" />\r\n+                    </button>\r\n+                    <button \r\n+                      onClick={() => onAssignReport && onAssignReport(report.id)}\r\n+                      className=\"text-gray-600 hover:text-gray-900\"\r\n+                    >\r\n+                      <UserCheck className=\"w-4 h-4\" />\r\n+                    </button>\r\n+                  </div>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n     </div>\r\n   );\r\n-}\r\n-\r\n-export default EmergencyTable;\n+};\n\\ No newline at end of file\n"
                }
            ],
            "date": 1755523867168,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCaption,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { MoreHorizontal } from \"lucide-react\";\r\nimport { Label } from \"recharts\";\r\n\r\nexport function EmergencyTable({ \r\n  events = [], \r\n  onStatusChange,\r\n  isLoading = false,\r\n  error = null,\r\n  timeFilter = \"Today\",\r\n  onTimeFilterChange,\r\n  highlightConditions = [],\r\n  \r\n}) {\r\n  const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n\r\n  const toggleDropdown = (index) => {\r\n    setOpenDropdown((prev) => (prev === index ? null : index));\r\n  };\r\n\r\n  const handleAction = (action, event, index) => {\r\n    console.log(`Action \"${action}\" selected for`, event);\r\n    \r\n    // Call the parent component's status change handler if provided\r\n    if (onStatusChange) {\r\n      onStatusChange(action, event, index);\r\n    }\r\n    \r\n    setOpenDropdown(null);\r\n  };\r\n\r\n  // Check if a row should be highlighted based on conditions\r\n  const shouldHighlightRow = (event) => {\r\n    if (highlightConditions.length === 0) return false;\r\n    \r\n    return highlightConditions.some(condition => {\r\n      return Object.keys(condition).every(key => {\r\n        return event[key] === condition[key];\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (!e.target.closest(\".dropdown-parent\")) {\r\n        setOpenDropdown(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Emergency Event History</h2>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-muted-foreground\">Loading emergency events...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-red-600\">Error: {error}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-6xl mx-auto bg-white p-6 rounded-xl shadow-sm mt-10\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-2xl font-semibold\">Emergency Events</h2>\r\n        <div className=\"relative\">\r\n          <select \r\n            className=\"flex h-10 items-center rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\r\n            value={timeFilter}\r\n            onChange={(e) => onTimeFilterChange && onTimeFilterChange(e.target.value)}\r\n          >\r\n            <option value=\"Today\">Today</option>\r\n            <option value=\"This Week\">This Week</option>\r\n            <option value=\"This Month\">This Month</option>\r\n            <option value=\"This Year\">This Year</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <Table>\r\n        <TableCaption className=\"sr-only\">A list of emergency alerts.</TableCaption>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Location</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Triggered By</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Type</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Time</TableHead>\r\n            <TableHead className=\"font-medium text-muted-foreground\">Status</TableHead>\r\n            { user?.role === \"admin\" && (\r\n            <TableHead className=\"font-medium text-muted-foreground\">Action</TableHead>\r\n            ) }\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {events.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\r\n                No emergency events found\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            events.map((event, index) => (\r\n              <TableRow\r\n                key={event.id || index}\r\n                className={shouldHighlightRow(event) ? \"bg-[#f2f7f3]\" : \"\"}\r\n              >\r\n                <TableCell className=\"font-medium\">{event.location}</TableCell>\r\n                <TableCell>{event.visitor}</TableCell>\r\n                <TableCell>{event.type}</TableCell>\r\n                <TableCell>{event.time}</TableCell>\r\n                <TableCell>\r\n                  <span\r\n                    className={`px-3 py-1 text-xs font-medium rounded-full ${\r\n                      event.status === \"Ongoing\"\r\n                        ? \"bg-red-100 text-red-700\"\r\n                        : \"bg-green-100 text-green-700\"\r\n                    }`}\r\n                  >\r\n                    {event.status}\r\n                  </span>\r\n                </TableCell>\r\n                {user?.role === \"admin\" && (\r\n                <TableCell className=\"relative dropdown-parent\">\r\n                  <MoreHorizontal\r\n                    className=\"cursor-pointer text-muted-foreground\"\r\n                    onClick={() => toggleDropdown(index)}\r\n                  />\r\n\r\n                  {openDropdown === index && (\r\n                    <div className=\"absolute right-0 mt-2 w-36 bg-white border rounded shadow z-20\">\r\n                      <button\r\n                        onClick={() => handleAction(\"Resolved\", event, index)}\r\n                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                      >\r\n                        Resolved\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleAction(\"Unresolved\", event, index)}\r\n                        className=\"block w-full text-left px-4 py-2 text-sm hover:bg-gray-100\"\r\n                      >\r\n                        Ongoing\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </TableCell>\r\n                 )}\r\n              </TableRow>\r\n\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmergencyTable;"
        }
    ]
}