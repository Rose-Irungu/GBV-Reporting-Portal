{
    "sourceFile": "src/components/AdminComponents/Appointments.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1756022144245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756022230006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,10 +282,8 @@\n           </button>\r\n         </div>\r\n       </div>\r\n \r\n-      <div className=\"mt-4 text-sm text-gray-500 text-center\">\r\n-        * Required fields. We'll contact you within 24 hours to confirm your appointment.\r\n-      </div>\r\n+    \r\n     </div>\r\n   );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756022241161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import React, { useState } from 'react';\r\n+import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n+\r\n+export default function AppointmentForm() {\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    email: '',\r\n+    phone: '',\r\n+    service: '',\r\n+    date: '',\r\n+    time: '',\r\n+    notes: ''\r\n+  });\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [errors, setErrors] = useState({});\r\n+\r\n+  const services = [\r\n+    'Consultation',\r\n+    'Follow-up Appointment',\r\n+    'Initial Assessment',\r\n+    'Treatment Session',\r\n+    'Review Meeting',\r\n+    'Other'\r\n+  ];\r\n+\r\n+  const timeSlots = [\r\n+    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n+    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n+    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n+  ];\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+    \r\n+    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n+    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = 'Email is required';\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = 'Please enter a valid email';\r\n+    }\r\n+    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n+    if (!formData.service) newErrors.service = 'Please select a service';\r\n+    if (!formData.date) newErrors.date = 'Please select a date';\r\n+    if (!formData.time) newErrors.time = 'Please select a time';\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = () => {\r\n+    if (validateForm()) {\r\n+      // Here you would typically send the data to your backend\r\n+      console.log('Appointment data:', formData);\r\n+      setIsSubmitted(true);\r\n+      \r\n+      // Reset form after 3 seconds\r\n+      setTimeout(() => {\r\n+        setIsSubmitted(false);\r\n+        setFormData({\r\n+          firstName: '',\r\n+          lastName: '',\r\n+          email: '',\r\n+          phone: '',\r\n+          service: '',\r\n+          date: '',\r\n+          time: '',\r\n+          notes: ''\r\n+        });\r\n+      }, 3000);\r\n+    }\r\n+  };\r\n+\r\n+  const handleChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [name]: value\r\n+    }));\r\n+    \r\n+    \r\n+    if (errors[name]) {\r\n+      setErrors(prev => ({\r\n+        ...prev,\r\n+        [name]: ''\r\n+      }));\r\n+    }\r\n+  };\r\n+\r\n+  const getMinDate = () => {\r\n+    const today = new Date();\r\n+    return today.toISOString().split('T')[0];\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n+        <div className=\"text-center\">\r\n+          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n+          <p className=\"text-gray-600\">\r\n+            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n+      <div className=\"mb-6\">\r\n+        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n+        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n+      </div>\r\n+\r\n+      <div className=\"space-y-6\">\r\n+        {/* Personal Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              First Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"firstName\"\r\n+              value={formData.firstName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your first name\"\r\n+            />\r\n+            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              Last Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"lastName\"\r\n+              value={formData.lastName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your last name\"\r\n+            />\r\n+            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Contact Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Mail className=\"w-4 h-4 mr-2\" />\r\n+              Email Address *\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.email ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your email\"\r\n+            />\r\n+            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Phone className=\"w-4 h-4 mr-2\" />\r\n+              Phone Number *\r\n+            </label>\r\n+            <input\r\n+              type=\"tel\"\r\n+              name=\"phone\"\r\n+              value={formData.phone}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your phone number\"\r\n+            />\r\n+            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Service Selection */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            Service Type *\r\n+          </label>\r\n+          <select\r\n+            name=\"service\"\r\n+            value={formData.service}\r\n+            onChange={handleChange}\r\n+            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+              errors.service ? 'border-red-500' : 'border-gray-300'\r\n+            }`}\r\n+          >\r\n+            <option value=\"\">Select a service</option>\r\n+            {services.map((service, index) => (\r\n+              <option key={index} value={service}>{service}</option>\r\n+            ))}\r\n+          </select>\r\n+          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n+        </div>\r\n+\r\n+        {/* Date and Time Selection */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Calendar className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Date *\r\n+            </label>\r\n+            <input\r\n+              type=\"date\"\r\n+              name=\"date\"\r\n+              value={formData.date}\r\n+              onChange={handleChange}\r\n+              min={getMinDate()}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.date ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            />\r\n+            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Clock className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Time *\r\n+            </label>\r\n+            <select\r\n+              name=\"time\"\r\n+              value={formData.time}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.time ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            >\r\n+              <option value=\"\">Select a time</option>\r\n+              {timeSlots.map((time, index) => (\r\n+                <option key={index} value={time}>{time}</option>\r\n+              ))}\r\n+            </select>\r\n+            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Additional Notes */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n+            Additional Notes (Optional)\r\n+          </label>\r\n+          <textarea\r\n+            name=\"notes\"\r\n+            value={formData.notes}\r\n+            onChange={handleChange}\r\n+            rows={4}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n+            placeholder=\"Any additional information or special requests...\"\r\n+          />\r\n+        </div>\r\n+\r\n+        {/* Submit Button */}\r\n+        <div className=\"pt-4\">\r\n+          <button\r\n+            onClick={handleSubmit}\r\n+            className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n+          >\r\n+            Request Appointment\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+    \r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756022743912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import React, { useState } from 'react';\r\n+import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n+\r\n+export default function AppointmentForm() {\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    email: '',\r\n+    phone: '',\r\n+    service: '',\r\n+    date: '',\r\n+    time: '',\r\n+    notes: ''\r\n+  });\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [errors, setErrors] = useState({});\r\n+\r\n+  const services = [\r\n+    'Consultation',\r\n+    'Follow-up Appointment',\r\n+    'Initial Assessment',\r\n+    'Treatment Session',\r\n+    'Review Meeting',\r\n+    'Other'\r\n+  ];\r\n+\r\n+  const timeSlots = [\r\n+    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n+    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n+    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n+  ];\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+    \r\n+    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n+    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = 'Email is required';\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = 'Please enter a valid email';\r\n+    }\r\n+    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n+    if (!formData.service) newErrors.service = 'Please select a service';\r\n+    if (!formData.date) newErrors.date = 'Please select a date';\r\n+    if (!formData.time) newErrors.time = 'Please select a time';\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = () => {\r\n+    if (validateForm()) {\r\n+      // Here you would typically send the data to your backend\r\n+      console.log('Appointment data:', formData);\r\n+      setIsSubmitted(true);\r\n+      \r\n+      // Reset form after 3 seconds\r\n+      setTimeout(() => {\r\n+        setIsSubmitted(false);\r\n+        setFormData({\r\n+          firstName: '',\r\n+          lastName: '',\r\n+          email: '',\r\n+          phone: '',\r\n+          service: '',\r\n+          date: '',\r\n+          time: '',\r\n+          notes: ''\r\n+        });\r\n+      }, 3000);\r\n+    }\r\n+  };\r\n+\r\n+  const handleChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [name]: value\r\n+    }));\r\n+    \r\n+    \r\n+    if (errors[name]) {\r\n+      setErrors(prev => ({\r\n+        ...prev,\r\n+        [name]: ''\r\n+      }));\r\n+    }\r\n+  };\r\n+\r\n+  const getMinDate = () => {\r\n+    const today = new Date();\r\n+    return today.toISOString().split('T')[0];\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n+        <div className=\"text-center\">\r\n+          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n+          <p className=\"text-gray-600\">\r\n+            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n+      <div className=\"mb-6\">\r\n+        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n+        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n+      </div>\r\n+\r\n+      <div className=\"space-y-6\">\r\n+        {/* Personal Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              First Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"firstName\"\r\n+              value={formData.firstName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your first name\"\r\n+            />\r\n+            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              Last Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"lastName\"\r\n+              value={formData.lastName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your last name\"\r\n+            />\r\n+            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Contact Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Mail className=\"w-4 h-4 mr-2\" />\r\n+              Email Address *\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.email ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your email\"\r\n+            />\r\n+            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Phone className=\"w-4 h-4 mr-2\" />\r\n+              Phone Number *\r\n+            </label>\r\n+            <input\r\n+              type=\"tel\"\r\n+              name=\"phone\"\r\n+              value={formData.phone}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your phone number\"\r\n+            />\r\n+            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Service Selection */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            Service Type *\r\n+          </label>\r\n+          <select\r\n+            name=\"service\"\r\n+            value={formData.service}\r\n+            onChange={handleChange}\r\n+            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+              errors.service ? 'border-red-500' : 'border-gray-300'\r\n+            }`}\r\n+          >\r\n+            <option value=\"\">Select a service</option>\r\n+            {services.map((service, index) => (\r\n+              <option key={index} value={service}>{service}</option>\r\n+            ))}\r\n+          </select>\r\n+          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n+        </div>\r\n+\r\n+        {/* Date and Time Selection */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Calendar className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Date *\r\n+            </label>\r\n+            <input\r\n+              type=\"date\"\r\n+              name=\"date\"\r\n+              value={formData.date}\r\n+              onChange={handleChange}\r\n+              min={getMinDate()}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.date ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            />\r\n+            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Clock className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Time *\r\n+            </label>\r\n+            <select\r\n+              name=\"time\"\r\n+              value={formData.time}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.time ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            >\r\n+              <option value=\"\">Select a time</option>\r\n+              {timeSlots.map((time, index) => (\r\n+                <option key={index} value={time}>{time}</option>\r\n+              ))}\r\n+            </select>\r\n+            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Additional Notes */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n+            Additional Notes (Optional)\r\n+          </label>\r\n+          <textarea\r\n+            name=\"notes\"\r\n+            value={formData.notes}\r\n+            onChange={handleChange}\r\n+            rows={4}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n+            placeholder=\"Any additional information or special requests...\"\r\n+          />\r\n+        </div>\r\n+\r\n+        {/* Submit Button */}\r\n+        <div className=\"pt-4\">\r\n+          <button\r\n+            onClick={handleSubmit}\r\n+            className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n+          >\r\n+            Request Appointment\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+    \r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756022754540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import React, { useState } from 'react';\r\n+import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n+\r\n+export default function AppointmentForm() {\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    email: '',\r\n+    phone: '',\r\n+    service: '',\r\n+    date: '',\r\n+    time: '',\r\n+    notes: ''\r\n+  });\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [errors, setErrors] = useState({});\r\n+\r\n+  const services = [\r\n+    'Consultation',\r\n+    'Follow-up Appointment',\r\n+    'Initial Assessment',\r\n+    'Treatment Session',\r\n+    'Review Meeting',\r\n+    'Other'\r\n+  ];\r\n+\r\n+  const timeSlots = [\r\n+    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n+    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n+    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n+  ];\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+    \r\n+    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n+    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = 'Email is required';\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = 'Please enter a valid email';\r\n+    }\r\n+    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n+    if (!formData.service) newErrors.service = 'Please select a service';\r\n+    if (!formData.date) newErrors.date = 'Please select a date';\r\n+    if (!formData.time) newErrors.time = 'Please select a time';\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = () => {\r\n+    if (validateForm()) {\r\n+      // Here you would typically send the data to your backend\r\n+      console.log('Appointment data:', formData);\r\n+      setIsSubmitted(true);\r\n+      \r\n+      // Reset form after 3 seconds\r\n+      setTimeout(() => {\r\n+        setIsSubmitted(false);\r\n+        setFormData({\r\n+          firstName: '',\r\n+          lastName: '',\r\n+          email: '',\r\n+          phone: '',\r\n+          service: '',\r\n+          date: '',\r\n+          time: '',\r\n+          notes: ''\r\n+        });\r\n+      }, 3000);\r\n+    }\r\n+  };\r\n+\r\n+  const handleChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [name]: value\r\n+    }));\r\n+    \r\n+    \r\n+    if (errors[name]) {\r\n+      setErrors(prev => ({\r\n+        ...prev,\r\n+        [name]: ''\r\n+      }));\r\n+    }\r\n+  };\r\n+\r\n+  const getMinDate = () => {\r\n+    const today = new Date();\r\n+    return today.toISOString().split('T')[0];\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n+        <div className=\"text-center\">\r\n+          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n+          <p className=\"text-gray-600\">\r\n+            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n+      <div className=\"mb-6\">\r\n+        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n+        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n+      </div>\r\n+\r\n+      <div className=\"space-y-6\">\r\n+        {/* Personal Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              First Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"firstName\"\r\n+              value={formData.firstName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your first name\"\r\n+            />\r\n+            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              Last Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"lastName\"\r\n+              value={formData.lastName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your last name\"\r\n+            />\r\n+            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Contact Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Mail className=\"w-4 h-4 mr-2\" />\r\n+              Email Address *\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.email ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your email\"\r\n+            />\r\n+            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Phone className=\"w-4 h-4 mr-2\" />\r\n+              Phone Number *\r\n+            </label>\r\n+            <input\r\n+              type=\"tel\"\r\n+              name=\"phone\"\r\n+              value={formData.phone}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your phone number\"\r\n+            />\r\n+            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Service Selection */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            Service Type *\r\n+          </label>\r\n+          <select\r\n+            name=\"service\"\r\n+            value={formData.service}\r\n+            onChange={handleChange}\r\n+            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+              errors.service ? 'border-red-500' : 'border-gray-300'\r\n+            }`}\r\n+          >\r\n+            <option value=\"\">Select a service</option>\r\n+            {services.map((service, index) => (\r\n+              <option key={index} value={service}>{service}</option>\r\n+            ))}\r\n+          </select>\r\n+          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n+        </div>\r\n+\r\n+        {/* Date and Time Selection */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Calendar className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Date *\r\n+            </label>\r\n+            <input\r\n+              type=\"date\"\r\n+              name=\"date\"\r\n+              value={formData.date}\r\n+              onChange={handleChange}\r\n+              min={getMinDate()}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.date ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            />\r\n+            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n+          </div>\r\n+\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Clock className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Time *\r\n+            </label>\r\n+            <select\r\n+              name=\"time\"\r\n+              value={formData.time}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.time ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            >\r\n+              <option value=\"\">Select a time</option>\r\n+              {timeSlots.map((time, index) => (\r\n+                <option key={index} value={time}>{time}</option>\r\n+              ))}\r\n+            </select>\r\n+            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Additional Notes */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n+            Additional Notes (Optional)\r\n+          </label>\r\n+          <textarea\r\n+            name=\"notes\"\r\n+            value={formData.notes}\r\n+            onChange={handleChange}\r\n+            rows={4}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n+            placeholder=\"Any additional information or special requests...\"\r\n+          />\r\n+        </div>\r\n+\r\n+        {/* Submit Button */}\r\n+        <div className=\"pt-4\">\r\n+          <button\r\n+            onClick={handleSubmit}\r\n+            className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n+          >\r\n+            Request Appointment\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n+\r\n+    \r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756197512235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1156 +1,289 @@\n-import React, { useState } from 'react';\r\n-import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n+// import React, { useState } from 'react';\r\n+// import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n \r\n-export default function AppointmentForm() {\r\n-  const [formData, setFormData] = useState({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    email: '',\r\n-    phone: '',\r\n-    service: '',\r\n-    date: '',\r\n-    time: '',\r\n-    notes: ''\r\n-  });\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [errors, setErrors] = useState({});\r\n+// export default function AppointmentForm() {\r\n+//   const [formData, setFormData] = useState({\r\n+//     firstName: '',\r\n+//     lastName: '',\r\n+//     email: '',\r\n+//     phone: '',\r\n+//     service: '',\r\n+//     date: '',\r\n+//     time: '',\r\n+//     notes: ''\r\n+//   });\r\n+//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n+//   const [errors, setErrors] = useState({});\r\n \r\n-  const services = [\r\n-    'Consultation',\r\n-    'Follow-up Appointment',\r\n-    'Initial Assessment',\r\n-    'Treatment Session',\r\n-    'Review Meeting',\r\n-    'Other'\r\n-  ];\r\n+//   const services = [\r\n+//     'Consultation',\r\n+//     'Follow-up Appointment',\r\n+//     'Initial Assessment',\r\n+//     'Treatment Session',\r\n+//     'Review Meeting',\r\n+//     'Other'\r\n+//   ];\r\n \r\n-  const timeSlots = [\r\n-    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n-    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n-    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n-  ];\r\n+//   const timeSlots = [\r\n+//     '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n+//     '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n+//     '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n+//   ];\r\n \r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n+//   const validateForm = () => {\r\n+//     const newErrors = {};\r\n     \r\n-    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n-    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = 'Email is required';\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = 'Please enter a valid email';\r\n-    }\r\n-    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n-    if (!formData.service) newErrors.service = 'Please select a service';\r\n-    if (!formData.date) newErrors.date = 'Please select a date';\r\n-    if (!formData.time) newErrors.time = 'Please select a time';\r\n+//     if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n+//     if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n+//     if (!formData.email.trim()) {\r\n+//       newErrors.email = 'Email is required';\r\n+//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+//       newErrors.email = 'Please enter a valid email';\r\n+//     }\r\n+//     if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n+//     if (!formData.service) newErrors.service = 'Please select a service';\r\n+//     if (!formData.date) newErrors.date = 'Please select a date';\r\n+//     if (!formData.time) newErrors.time = 'Please select a time';\r\n \r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n+//     setErrors(newErrors);\r\n+//     return Object.keys(newErrors).length === 0;\r\n+//   };\r\n \r\n-  const handleSubmit = () => {\r\n-    if (validateForm()) {\r\n-      // Here you would typically send the data to your backend\r\n-      console.log('Appointment data:', formData);\r\n-      setIsSubmitted(true);\r\n+//   const handleSubmit = () => {\r\n+//     if (validateForm()) {\r\n+//       // Here you would typically send the data to your backend\r\n+//       console.log('Appointment data:', formData);\r\n+//       setIsSubmitted(true);\r\n       \r\n-      // Reset form after 3 seconds\r\n-      setTimeout(() => {\r\n-        setIsSubmitted(false);\r\n-        setFormData({\r\n-          firstName: '',\r\n-          lastName: '',\r\n-          email: '',\r\n-          phone: '',\r\n-          service: '',\r\n-          date: '',\r\n-          time: '',\r\n-          notes: ''\r\n-        });\r\n-      }, 3000);\r\n-    }\r\n-  };\r\n+//       // Reset form after 3 seconds\r\n+//       setTimeout(() => {\r\n+//         setIsSubmitted(false);\r\n+//         setFormData({\r\n+//           firstName: '',\r\n+//           lastName: '',\r\n+//           email: '',\r\n+//           phone: '',\r\n+//           service: '',\r\n+//           date: '',\r\n+//           time: '',\r\n+//           notes: ''\r\n+//         });\r\n+//       }, 3000);\r\n+//     }\r\n+//   };\r\n \r\n-  const handleChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [name]: value\r\n-    }));\r\n+//   const handleChange = (e) => {\r\n+//     const { name, value } = e.target;\r\n+//     setFormData(prev => ({\r\n+//       ...prev,\r\n+//       [name]: value\r\n+//     }));\r\n     \r\n     \r\n-    if (errors[name]) {\r\n-      setErrors(prev => ({\r\n-        ...prev,\r\n-        [name]: ''\r\n-      }));\r\n-    }\r\n-  };\r\n+//     if (errors[name]) {\r\n+//       setErrors(prev => ({\r\n+//         ...prev,\r\n+//         [name]: ''\r\n+//       }));\r\n+//     }\r\n+//   };\r\n \r\n-  const getMinDate = () => {\r\n-    const today = new Date();\r\n-    return today.toISOString().split('T')[0];\r\n-  };\r\n+//   const getMinDate = () => {\r\n+//     const today = new Date();\r\n+//     return today.toISOString().split('T')[0];\r\n+//   };\r\n \r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n-        <div className=\"text-center\">\r\n-          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n-          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n-          <p className=\"text-gray-600\">\r\n-            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n+//   if (isSubmitted) {\r\n+//     return (\r\n+//       <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n+//         <div className=\"text-center\">\r\n+//           <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n+//           <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n+//           <p className=\"text-gray-600\">\r\n+//             Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n+//           </p>\r\n+//         </div>\r\n+//       </div>\r\n+//     );\r\n+//   }\r\n \r\n-  return (\r\n-    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n-      <div className=\"mb-6\">\r\n-        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n-        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n-      </div>\r\n+//   return (\r\n+//     <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n+//       <div className=\"mb-6\">\r\n+//         <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n+//         <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n+//       </div>\r\n \r\n-      <div className=\"space-y-6\">\r\n-        {/* Personal Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              First Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"firstName\"\r\n-              value={formData.firstName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your first name\"\r\n-            />\r\n-            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n-          </div>\r\n+//       <div className=\"space-y-6\">\r\n+//         {/* Personal Information */}\r\n+//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <User className=\"w-4 h-4 mr-2\" />\r\n+//               First Name *\r\n+//             </label>\r\n+//             <input\r\n+//               type=\"text\"\r\n+//               name=\"firstName\"\r\n+//               value={formData.firstName}\r\n+//               onChange={handleChange}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//               placeholder=\"Enter your first name\"\r\n+//             />\r\n+//             {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n+//           </div>\r\n \r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              Last Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"lastName\"\r\n-              value={formData.lastName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your last name\"\r\n-            />\r\n-            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n-          </div>\r\n-        </div>\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <User className=\"w-4 h-4 mr-2\" />\r\n+//               Last Name *\r\n+//             </label>\r\n+//             <input\r\n+//               type=\"text\"\r\n+//               name=\"lastName\"\r\n+//               value={formData.lastName}\r\n+//               onChange={handleChange}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//               placeholder=\"Enter your last name\"\r\n+//             />\r\n+//             {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n+//           </div>\r\n+//         </div>\r\n \r\n-        {/* Contact Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Mail className=\"w-4 h-4 mr-2\" />\r\n-              Email Address *\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.email ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your email\"\r\n-            />\r\n-            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n-          </div>\r\n+//         {/* Contact Information */}\r\n+//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <Mail className=\"w-4 h-4 mr-2\" />\r\n+//               Email Address *\r\n+//             </label>\r\n+//             <input\r\n+//               type=\"email\"\r\n+//               name=\"email\"\r\n+//               value={formData.email}\r\n+//               onChange={handleChange}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.email ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//               placeholder=\"Enter your email\"\r\n+//             />\r\n+//             {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n+//           </div>\r\n \r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Phone className=\"w-4 h-4 mr-2\" />\r\n-              Phone Number *\r\n-            </label>\r\n-            <input\r\n-              type=\"tel\"\r\n-              name=\"phone\"\r\n-              value={formData.phone}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your phone number\"\r\n-            />\r\n-            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n-          </div>\r\n-        </div>\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <Phone className=\"w-4 h-4 mr-2\" />\r\n+//               Phone Number *\r\n+//             </label>\r\n+//             <input\r\n+//               type=\"tel\"\r\n+//               name=\"phone\"\r\n+//               value={formData.phone}\r\n+//               onChange={handleChange}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.phone ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//               placeholder=\"Enter your phone number\"\r\n+//             />\r\n+//             {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n+//           </div>\r\n+//         </div>\r\n \r\n-        {/* Service Selection */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            Service Type *\r\n-          </label>\r\n-          <select\r\n-            name=\"service\"\r\n-            value={formData.service}\r\n-            onChange={handleChange}\r\n-            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-              errors.service ? 'border-red-500' : 'border-gray-300'\r\n-            }`}\r\n-          >\r\n-            <option value=\"\">Select a service</option>\r\n-            {services.map((service, index) => (\r\n-              <option key={index} value={service}>{service}</option>\r\n-            ))}\r\n-          </select>\r\n-          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n-        </div>\r\n+//         {/* Service Selection */}\r\n+//         <div>\r\n+//           <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//             Service Type *\r\n+//           </label>\r\n+//           <select\r\n+//             name=\"service\"\r\n+//             value={formData.service}\r\n+//             onChange={handleChange}\r\n+//             className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//               errors.service ? 'border-red-500' : 'border-gray-300'\r\n+//             }`}\r\n+//           >\r\n+//             <option value=\"\">Select a service</option>\r\n+//             {services.map((service, index) => (\r\n+//               <option key={index} value={service}>{service}</option>\r\n+//             ))}\r\n+//           </select>\r\n+//           {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n+//         </div>\r\n \r\n-        {/* Date and Time Selection */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Calendar className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Date *\r\n-            </label>\r\n-            <input\r\n-              type=\"date\"\r\n-              name=\"date\"\r\n-              value={formData.date}\r\n-              onChange={handleChange}\r\n-              min={getMinDate()}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.date ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            />\r\n-            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n-          </div>\r\n+//         {/* Date and Time Selection */}\r\n+//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <Calendar className=\"w-4 h-4 mr-2\" />\r\n+//               Preferred Date *\r\n+//             </label>\r\n+//             <input\r\n+//               type=\"date\"\r\n+//               name=\"date\"\r\n+//               value={formData.date}\r\n+//               onChange={handleChange}\r\n+//               min={getMinDate()}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.date ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//             />\r\n+//             {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n+//           </div>\r\n \r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Clock className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Time *\r\n-            </label>\r\n-            <select\r\n-              name=\"time\"\r\n-              value={formData.time}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.time ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            >\r\n-              <option value=\"\">Select a time</option>\r\n-              {timeSlots.map((time, index) => (\r\n-                <option key={index} value={time}>{time}</option>\r\n-              ))}\r\n-            </select>\r\n-            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n-          </div>\r\n-        </div>\r\n+//           <div>\r\n+//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//               <Clock className=\"w-4 h-4 mr-2\" />\r\n+//               Preferred Time *\r\n+//             </label>\r\n+//             <select\r\n+//               name=\"time\"\r\n+//               value={formData.time}\r\n+//               onChange={handleChange}\r\n+//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+//                 errors.time ? 'border-red-500' : 'border-gray-300'\r\n+//               }`}\r\n+//             >\r\n+//               <option value=\"\">Select a time</option>\r\n+//               {timeSlots.map((time, index) => (\r\n+//                 <option key={index} value={time}>{time}</option>\r\n+//               ))}\r\n+//             </select>\r\n+//             {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n+//           </div>\r\n+//         </div>\r\n \r\n-        {/* Additional Notes */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n-            Additional Notes (Optional)\r\n-          </label>\r\n-          <textarea\r\n-            name=\"notes\"\r\n-            value={formData.notes}\r\n-            onChange={handleChange}\r\n-            rows={4}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n-            placeholder=\"Any additional information or special requests...\"\r\n-          />\r\n-        </div>\r\n+//         {/* Additional Notes */}\r\n+//         <div>\r\n+//           <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+//             <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n+//             Additional Notes (Optional)\r\n+//           </label>\r\n+//           <textarea\r\n+//             name=\"notes\"\r\n+//             value={formData.notes}\r\n+//             onChange={handleChange}\r\n+//             rows={4}\r\n+//             className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n+//             placeholder=\"Any additional information or special requests...\"\r\n+//           />\r\n+//         </div>\r\n \r\n-        {/* Submit Button */}\r\n-        <div className=\"pt-4\">\r\n-          <button\r\n-            onClick={handleSubmit}\r\n-            className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n-          >\r\n-            Request Appointment\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n+//         {/* Submit Button */}\r\n+//         <div className=\"pt-4\">\r\n+//           <button\r\n+//             onClick={handleSubmit}\r\n+//             className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n+//           >\r\n+//             Request Appointment\r\n+//           </button>\r\n+//         </div>\r\n+//       </div>\r\n \r\n     \r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from 'react';\r\n-import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n-\r\n-export default function AppointmentForm() {\r\n-  const [formData, setFormData] = useState({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    email: '',\r\n-    phone: '',\r\n-    service: '',\r\n-    date: '',\r\n-    time: '',\r\n-    notes: ''\r\n-  });\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [errors, setErrors] = useState({});\r\n-\r\n-  const services = [\r\n-    'Consultation',\r\n-    'Follow-up Appointment',\r\n-    'Initial Assessment',\r\n-    'Treatment Session',\r\n-    'Review Meeting',\r\n-    'Other'\r\n-  ];\r\n-\r\n-  const timeSlots = [\r\n-    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n-    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n-    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n-  ];\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-    \r\n-    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n-    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = 'Email is required';\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = 'Please enter a valid email';\r\n-    }\r\n-    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n-    if (!formData.service) newErrors.service = 'Please select a service';\r\n-    if (!formData.date) newErrors.date = 'Please select a date';\r\n-    if (!formData.time) newErrors.time = 'Please select a time';\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = () => {\r\n-    if (validateForm()) {\r\n-      // Here you would typically send the data to your backend\r\n-      console.log('Appointment data:', formData);\r\n-      setIsSubmitted(true);\r\n-      \r\n-      // Reset form after 3 seconds\r\n-      setTimeout(() => {\r\n-        setIsSubmitted(false);\r\n-        setFormData({\r\n-          firstName: '',\r\n-          lastName: '',\r\n-          email: '',\r\n-          phone: '',\r\n-          service: '',\r\n-          date: '',\r\n-          time: '',\r\n-          notes: ''\r\n-        });\r\n-      }, 3000);\r\n-    }\r\n-  };\r\n-\r\n-  const handleChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [name]: value\r\n-    }));\r\n-    \r\n-    \r\n-    if (errors[name]) {\r\n-      setErrors(prev => ({\r\n-        ...prev,\r\n-        [name]: ''\r\n-      }));\r\n-    }\r\n-  };\r\n-\r\n-  const getMinDate = () => {\r\n-    const today = new Date();\r\n-    return today.toISOString().split('T')[0];\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n-        <div className=\"text-center\">\r\n-          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n-          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n-          <p className=\"text-gray-600\">\r\n-            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n-      <div className=\"mb-6\">\r\n-        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n-        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n-      </div>\r\n-\r\n-      <div className=\"space-y-6\">\r\n-        {/* Personal Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              First Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"firstName\"\r\n-              value={formData.firstName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your first name\"\r\n-            />\r\n-            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              Last Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"lastName\"\r\n-              value={formData.lastName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your last name\"\r\n-            />\r\n-            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Contact Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Mail className=\"w-4 h-4 mr-2\" />\r\n-              Email Address *\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.email ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your email\"\r\n-            />\r\n-            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Phone className=\"w-4 h-4 mr-2\" />\r\n-              Phone Number *\r\n-            </label>\r\n-            <input\r\n-              type=\"tel\"\r\n-              name=\"phone\"\r\n-              value={formData.phone}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your phone number\"\r\n-            />\r\n-            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Service Selection */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            Service Type *\r\n-          </label>\r\n-          <select\r\n-            name=\"service\"\r\n-            value={formData.service}\r\n-            onChange={handleChange}\r\n-            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-              errors.service ? 'border-red-500' : 'border-gray-300'\r\n-            }`}\r\n-          >\r\n-            <option value=\"\">Select a service</option>\r\n-            {services.map((service, index) => (\r\n-              <option key={index} value={service}>{service}</option>\r\n-            ))}\r\n-          </select>\r\n-          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n-        </div>\r\n-\r\n-        {/* Date and Time Selection */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Calendar className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Date *\r\n-            </label>\r\n-            <input\r\n-              type=\"date\"\r\n-              name=\"date\"\r\n-              value={formData.date}\r\n-              onChange={handleChange}\r\n-              min={getMinDate()}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.date ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            />\r\n-            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Clock className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Time *\r\n-            </label>\r\n-            <select\r\n-              name=\"time\"\r\n-              value={formData.time}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.time ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            >\r\n-              <option value=\"\">Select a time</option>\r\n-              {timeSlots.map((time, index) => (\r\n-                <option key={index} value={time}>{time}</option>\r\n-              ))}\r\n-            </select>\r\n-            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Additional Notes */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n-            Additional Notes (Optional)\r\n-          </label>\r\n-          <textarea\r\n-            name=\"notes\"\r\n-            value={formData.notes}\r\n-            onChange={handleChange}\r\n-            rows={4}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n-            placeholder=\"Any additional information or special requests...\"\r\n-          />\r\n-        </div>\r\n-\r\n-        {/* Submit Button */}\r\n-        <div className=\"pt-4\">\r\n-          <button\r\n-            onClick={handleSubmit}\r\n-            className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n-          >\r\n-            Request Appointment\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-    \r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from 'react';\r\n-import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n-\r\n-export default function AppointmentForm() {\r\n-  const [formData, setFormData] = useState({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    email: '',\r\n-    phone: '',\r\n-    service: '',\r\n-    date: '',\r\n-    time: '',\r\n-    notes: ''\r\n-  });\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [errors, setErrors] = useState({});\r\n-\r\n-  const services = [\r\n-    'Consultation',\r\n-    'Follow-up Appointment',\r\n-    'Initial Assessment',\r\n-    'Treatment Session',\r\n-    'Review Meeting',\r\n-    'Other'\r\n-  ];\r\n-\r\n-  const timeSlots = [\r\n-    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n-    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n-    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n-  ];\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-    \r\n-    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n-    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = 'Email is required';\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = 'Please enter a valid email';\r\n-    }\r\n-    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n-    if (!formData.service) newErrors.service = 'Please select a service';\r\n-    if (!formData.date) newErrors.date = 'Please select a date';\r\n-    if (!formData.time) newErrors.time = 'Please select a time';\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = () => {\r\n-    if (validateForm()) {\r\n-      // Here you would typically send the data to your backend\r\n-      console.log('Appointment data:', formData);\r\n-      setIsSubmitted(true);\r\n-      \r\n-      // Reset form after 3 seconds\r\n-      setTimeout(() => {\r\n-        setIsSubmitted(false);\r\n-        setFormData({\r\n-          firstName: '',\r\n-          lastName: '',\r\n-          email: '',\r\n-          phone: '',\r\n-          service: '',\r\n-          date: '',\r\n-          time: '',\r\n-          notes: ''\r\n-        });\r\n-      }, 3000);\r\n-    }\r\n-  };\r\n-\r\n-  const handleChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [name]: value\r\n-    }));\r\n-    \r\n-    \r\n-    if (errors[name]) {\r\n-      setErrors(prev => ({\r\n-        ...prev,\r\n-        [name]: ''\r\n-      }));\r\n-    }\r\n-  };\r\n-\r\n-  const getMinDate = () => {\r\n-    const today = new Date();\r\n-    return today.toISOString().split('T')[0];\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n-        <div className=\"text-center\">\r\n-          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n-          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n-          <p className=\"text-gray-600\">\r\n-            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n-      <div className=\"mb-6\">\r\n-        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n-        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n-      </div>\r\n-\r\n-      <div className=\"space-y-6\">\r\n-        {/* Personal Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              First Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"firstName\"\r\n-              value={formData.firstName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your first name\"\r\n-            />\r\n-            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              Last Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"lastName\"\r\n-              value={formData.lastName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your last name\"\r\n-            />\r\n-            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Contact Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Mail className=\"w-4 h-4 mr-2\" />\r\n-              Email Address *\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.email ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your email\"\r\n-            />\r\n-            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Phone className=\"w-4 h-4 mr-2\" />\r\n-              Phone Number *\r\n-            </label>\r\n-            <input\r\n-              type=\"tel\"\r\n-              name=\"phone\"\r\n-              value={formData.phone}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your phone number\"\r\n-            />\r\n-            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Service Selection */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            Service Type *\r\n-          </label>\r\n-          <select\r\n-            name=\"service\"\r\n-            value={formData.service}\r\n-            onChange={handleChange}\r\n-            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-              errors.service ? 'border-red-500' : 'border-gray-300'\r\n-            }`}\r\n-          >\r\n-            <option value=\"\">Select a service</option>\r\n-            {services.map((service, index) => (\r\n-              <option key={index} value={service}>{service}</option>\r\n-            ))}\r\n-          </select>\r\n-          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n-        </div>\r\n-\r\n-        {/* Date and Time Selection */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Calendar className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Date *\r\n-            </label>\r\n-            <input\r\n-              type=\"date\"\r\n-              name=\"date\"\r\n-              value={formData.date}\r\n-              onChange={handleChange}\r\n-              min={getMinDate()}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.date ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            />\r\n-            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Clock className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Time *\r\n-            </label>\r\n-            <select\r\n-              name=\"time\"\r\n-              value={formData.time}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.time ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            >\r\n-              <option value=\"\">Select a time</option>\r\n-              {timeSlots.map((time, index) => (\r\n-                <option key={index} value={time}>{time}</option>\r\n-              ))}\r\n-            </select>\r\n-            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Additional Notes */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n-            Additional Notes (Optional)\r\n-          </label>\r\n-          <textarea\r\n-            name=\"notes\"\r\n-            value={formData.notes}\r\n-            onChange={handleChange}\r\n-            rows={4}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n-            placeholder=\"Any additional information or special requests...\"\r\n-          />\r\n-        </div>\r\n-\r\n-        {/* Submit Button */}\r\n-        <div className=\"pt-4\">\r\n-          <button\r\n-            onClick={handleSubmit}\r\n-            className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n-          >\r\n-            Request Appointment\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-    \r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from 'react';\r\n-import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n-\r\n-export default function AppointmentForm() {\r\n-  const [formData, setFormData] = useState({\r\n-    firstName: '',\r\n-    lastName: '',\r\n-    email: '',\r\n-    phone: '',\r\n-    service: '',\r\n-    date: '',\r\n-    time: '',\r\n-    notes: ''\r\n-  });\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [errors, setErrors] = useState({});\r\n-\r\n-  const services = [\r\n-    'Consultation',\r\n-    'Follow-up Appointment',\r\n-    'Initial Assessment',\r\n-    'Treatment Session',\r\n-    'Review Meeting',\r\n-    'Other'\r\n-  ];\r\n-\r\n-  const timeSlots = [\r\n-    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n\\ No newline at end of file\n-    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n-    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n-  ];\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-    \r\n-    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n-    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = 'Email is required';\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = 'Please enter a valid email';\r\n-    }\r\n-    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n-    if (!formData.service) newErrors.service = 'Please select a service';\r\n-    if (!formData.date) newErrors.date = 'Please select a date';\r\n-    if (!formData.time) newErrors.time = 'Please select a time';\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = () => {\r\n-    if (validateForm()) {\r\n-      // Here you would typically send the data to your backend\r\n-      console.log('Appointment data:', formData);\r\n-      setIsSubmitted(true);\r\n-      \r\n-      // Reset form after 3 seconds\r\n-      setTimeout(() => {\r\n-        setIsSubmitted(false);\r\n-        setFormData({\r\n-          firstName: '',\r\n-          lastName: '',\r\n-          email: '',\r\n-          phone: '',\r\n-          service: '',\r\n-          date: '',\r\n-          time: '',\r\n-          notes: ''\r\n-        });\r\n-      }, 3000);\r\n-    }\r\n-  };\r\n-\r\n-  const handleChange = (e) => {\r\n-    const { name, value } = e.target;\r\n-    setFormData(prev => ({\r\n-      ...prev,\r\n-      [name]: value\r\n-    }));\r\n-    \r\n-    // Clear error when user starts typing\r\n-    if (errors[name]) {\r\n-      setErrors(prev => ({\r\n-        ...prev,\r\n-        [name]: ''\r\n-      }));\r\n-    }\r\n-  };\r\n-\r\n-  const getMinDate = () => {\r\n-    const today = new Date();\r\n-    return today.toISOString().split('T')[0];\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n-        <div className=\"text-center\">\r\n-          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n-          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n-          <p className=\"text-gray-600\">\r\n-            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n-      <div className=\"mb-6\">\r\n-        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n-        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n-      </div>\r\n-\r\n-      <div className=\"space-y-6\">\r\n-        {/* Personal Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              First Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"firstName\"\r\n-              value={formData.firstName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your first name\"\r\n-            />\r\n-            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <User className=\"w-4 h-4 mr-2\" />\r\n-              Last Name *\r\n-            </label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"lastName\"\r\n-              value={formData.lastName}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your last name\"\r\n-            />\r\n-            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Contact Information */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Mail className=\"w-4 h-4 mr-2\" />\r\n-              Email Address *\r\n-            </label>\r\n-            <input\r\n-              type=\"email\"\r\n-              name=\"email\"\r\n-              value={formData.email}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.email ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your email\"\r\n-            />\r\n-            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Phone className=\"w-4 h-4 mr-2\" />\r\n-              Phone Number *\r\n-            </label>\r\n-            <input\r\n-              type=\"tel\"\r\n-              name=\"phone\"\r\n-              value={formData.phone}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-              placeholder=\"Enter your phone number\"\r\n-            />\r\n-            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Service Selection */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            Service Type *\r\n-          </label>\r\n-          <select\r\n-            name=\"service\"\r\n-            value={formData.service}\r\n-            onChange={handleChange}\r\n-            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-              errors.service ? 'border-red-500' : 'border-gray-300'\r\n-            }`}\r\n-          >\r\n-            <option value=\"\">Select a service</option>\r\n-            {services.map((service, index) => (\r\n-              <option key={index} value={service}>{service}</option>\r\n-            ))}\r\n-          </select>\r\n-          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n-        </div>\r\n-\r\n-        {/* Date and Time Selection */}\r\n-        <div className=\"grid md:grid-cols-2 gap-4\">\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Calendar className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Date *\r\n-            </label>\r\n-            <input\r\n-              type=\"date\"\r\n-              name=\"date\"\r\n-              value={formData.date}\r\n-              onChange={handleChange}\r\n-              min={getMinDate()}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.date ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            />\r\n-            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n-          </div>\r\n-\r\n-          <div>\r\n-            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-              <Clock className=\"w-4 h-4 mr-2\" />\r\n-              Preferred Time *\r\n-            </label>\r\n-            <select\r\n-              name=\"time\"\r\n-              value={formData.time}\r\n-              onChange={handleChange}\r\n-              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-                errors.time ? 'border-red-500' : 'border-gray-300'\r\n-              }`}\r\n-            >\r\n-              <option value=\"\">Select a time</option>\r\n-              {timeSlots.map((time, index) => (\r\n-                <option key={index} value={time}>{time}</option>\r\n-              ))}\r\n-            </select>\r\n-            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n-          </div>\r\n-        </div>\r\n-\r\n-        {/* Additional Notes */}\r\n-        <div>\r\n-          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n-            Additional Notes (Optional)\r\n-          </label>\r\n-          <textarea\r\n-            name=\"notes\"\r\n-            value={formData.notes}\r\n-            onChange={handleChange}\r\n-            rows={4}\r\n-            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n-            placeholder=\"Any additional information or special requests...\"\r\n-          />\r\n-        </div>\r\n-\r\n-        {/* Submit Button */}\r\n-        <div className=\"pt-4\">\r\n-          <button\r\n-            onClick={handleSubmit}\r\n-            className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n-          >\r\n-            Request Appointment\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-    \r\n-    </div>\r\n-  );\r\n-}\n+//     </div>\r\n+//   );\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756236783034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,289 +1,289 @@\n-// import React, { useState } from 'react';\r\n-// import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n+import React, { useState } from 'react';\r\n+import { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n \r\n-// export default function AppointmentForm() {\r\n-//   const [formData, setFormData] = useState({\r\n-//     firstName: '',\r\n-//     lastName: '',\r\n-//     email: '',\r\n-//     phone: '',\r\n-//     service: '',\r\n-//     date: '',\r\n-//     time: '',\r\n-//     notes: ''\r\n-//   });\r\n-//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n-//   const [errors, setErrors] = useState({});\r\n+export default function AppointmentForm() {\r\n+  const [formData, setFormData] = useState({\r\n+    firstName: '',\r\n+    lastName: '',\r\n+    email: '',\r\n+    phone: '',\r\n+    service: '',\r\n+    date: '',\r\n+    time: '',\r\n+    notes: ''\r\n+  });\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [errors, setErrors] = useState({});\r\n \r\n-//   const services = [\r\n-//     'Consultation',\r\n-//     'Follow-up Appointment',\r\n-//     'Initial Assessment',\r\n-//     'Treatment Session',\r\n-//     'Review Meeting',\r\n-//     'Other'\r\n-//   ];\r\n+  const services = [\r\n+    'Consultation',\r\n+    'Follow-up Appointment',\r\n+    'Initial Assessment',\r\n+    'Treatment Session',\r\n+    'Review Meeting',\r\n+    'Other'\r\n+  ];\r\n \r\n-//   const timeSlots = [\r\n-//     '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n-//     '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n-//     '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n-//   ];\r\n+  const timeSlots = [\r\n+    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n+    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n+    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n+  ];\r\n \r\n-//   const validateForm = () => {\r\n-//     const newErrors = {};\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n     \r\n-//     if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n-//     if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n-//     if (!formData.email.trim()) {\r\n-//       newErrors.email = 'Email is required';\r\n-//     } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-//       newErrors.email = 'Please enter a valid email';\r\n-//     }\r\n-//     if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n-//     if (!formData.service) newErrors.service = 'Please select a service';\r\n-//     if (!formData.date) newErrors.date = 'Please select a date';\r\n-//     if (!formData.time) newErrors.time = 'Please select a time';\r\n+    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n+    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = 'Email is required';\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = 'Please enter a valid email';\r\n+    }\r\n+    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n+    if (!formData.service) newErrors.service = 'Please select a service';\r\n+    if (!formData.date) newErrors.date = 'Please select a date';\r\n+    if (!formData.time) newErrors.time = 'Please select a time';\r\n \r\n-//     setErrors(newErrors);\r\n-//     return Object.keys(newErrors).length === 0;\r\n-//   };\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n \r\n-//   const handleSubmit = () => {\r\n-//     if (validateForm()) {\r\n-//       // Here you would typically send the data to your backend\r\n-//       console.log('Appointment data:', formData);\r\n-//       setIsSubmitted(true);\r\n+  const handleSubmit = () => {\r\n+    if (validateForm()) {\r\n+      // Here you would typically send the data to your backend\r\n+      console.log('Appointment data:', formData);\r\n+      setIsSubmitted(true);\r\n       \r\n-//       // Reset form after 3 seconds\r\n-//       setTimeout(() => {\r\n-//         setIsSubmitted(false);\r\n-//         setFormData({\r\n-//           firstName: '',\r\n-//           lastName: '',\r\n-//           email: '',\r\n-//           phone: '',\r\n-//           service: '',\r\n-//           date: '',\r\n-//           time: '',\r\n-//           notes: ''\r\n-//         });\r\n-//       }, 3000);\r\n-//     }\r\n-//   };\r\n+      // Reset form after 3 seconds\r\n+      setTimeout(() => {\r\n+        setIsSubmitted(false);\r\n+        setFormData({\r\n+          firstName: '',\r\n+          lastName: '',\r\n+          email: '',\r\n+          phone: '',\r\n+          service: '',\r\n+          date: '',\r\n+          time: '',\r\n+          notes: ''\r\n+        });\r\n+      }, 3000);\r\n+    }\r\n+  };\r\n \r\n-//   const handleChange = (e) => {\r\n-//     const { name, value } = e.target;\r\n-//     setFormData(prev => ({\r\n-//       ...prev,\r\n-//       [name]: value\r\n-//     }));\r\n+  const handleChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      [name]: value\r\n+    }));\r\n     \r\n     \r\n-//     if (errors[name]) {\r\n-//       setErrors(prev => ({\r\n-//         ...prev,\r\n-//         [name]: ''\r\n-//       }));\r\n-//     }\r\n-//   };\r\n+    if (errors[name]) {\r\n+      setErrors(prev => ({\r\n+        ...prev,\r\n+        [name]: ''\r\n+      }));\r\n+    }\r\n+  };\r\n \r\n-//   const getMinDate = () => {\r\n-//     const today = new Date();\r\n-//     return today.toISOString().split('T')[0];\r\n-//   };\r\n+  const getMinDate = () => {\r\n+    const today = new Date();\r\n+    return today.toISOString().split('T')[0];\r\n+  };\r\n \r\n-//   if (isSubmitted) {\r\n-//     return (\r\n-//       <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n-//         <div className=\"text-center\">\r\n-//           <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n-//           <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n-//           <p className=\"text-gray-600\">\r\n-//             Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n-//           </p>\r\n-//         </div>\r\n-//       </div>\r\n-//     );\r\n-//   }\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n+        <div className=\"text-center\">\r\n+          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n+          <p className=\"text-gray-600\">\r\n+            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n-//   return (\r\n-//     <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n-//       <div className=\"mb-6\">\r\n-//         <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n-//         <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n-//       </div>\r\n+  return (\r\n+    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n+      <div className=\"mb-6\">\r\n+        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n+        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n+      </div>\r\n \r\n-//       <div className=\"space-y-6\">\r\n-//         {/* Personal Information */}\r\n-//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <User className=\"w-4 h-4 mr-2\" />\r\n-//               First Name *\r\n-//             </label>\r\n-//             <input\r\n-//               type=\"text\"\r\n-//               name=\"firstName\"\r\n-//               value={formData.firstName}\r\n-//               onChange={handleChange}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//               placeholder=\"Enter your first name\"\r\n-//             />\r\n-//             {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n-//           </div>\r\n+      <div className=\"space-y-6\">\r\n+        {/* Personal Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              First Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"firstName\"\r\n+              value={formData.firstName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your first name\"\r\n+            />\r\n+            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n+          </div>\r\n \r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <User className=\"w-4 h-4 mr-2\" />\r\n-//               Last Name *\r\n-//             </label>\r\n-//             <input\r\n-//               type=\"text\"\r\n-//               name=\"lastName\"\r\n-//               value={formData.lastName}\r\n-//               onChange={handleChange}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//               placeholder=\"Enter your last name\"\r\n-//             />\r\n-//             {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n-//           </div>\r\n-//         </div>\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <User className=\"w-4 h-4 mr-2\" />\r\n+              Last Name *\r\n+            </label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"lastName\"\r\n+              value={formData.lastName}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n\\ No newline at end of file\n+              placeholder=\"Enter your last name\"\r\n+            />\r\n+            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n+          </div>\r\n+        </div>\r\n \r\n-//         {/* Contact Information */}\r\n-//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <Mail className=\"w-4 h-4 mr-2\" />\r\n-//               Email Address *\r\n-//             </label>\r\n-//             <input\r\n-//               type=\"email\"\r\n-//               name=\"email\"\r\n-//               value={formData.email}\r\n-//               onChange={handleChange}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.email ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//               placeholder=\"Enter your email\"\r\n-//             />\r\n-//             {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n-//           </div>\r\n+        {/* Contact Information */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Mail className=\"w-4 h-4 mr-2\" />\r\n+              Email Address *\r\n+            </label>\r\n+            <input\r\n+              type=\"email\"\r\n+              name=\"email\"\r\n+              value={formData.email}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.email ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your email\"\r\n+            />\r\n+            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n+          </div>\r\n \r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <Phone className=\"w-4 h-4 mr-2\" />\r\n-//               Phone Number *\r\n-//             </label>\r\n-//             <input\r\n-//               type=\"tel\"\r\n-//               name=\"phone\"\r\n-//               value={formData.phone}\r\n-//               onChange={handleChange}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.phone ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//               placeholder=\"Enter your phone number\"\r\n-//             />\r\n-//             {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n-//           </div>\r\n-//         </div>\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Phone className=\"w-4 h-4 mr-2\" />\r\n+              Phone Number *\r\n+            </label>\r\n+            <input\r\n+              type=\"tel\"\r\n+              name=\"phone\"\r\n+              value={formData.phone}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+              placeholder=\"Enter your phone number\"\r\n+            />\r\n+            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n+          </div>\r\n+        </div>\r\n \r\n-//         {/* Service Selection */}\r\n-//         <div>\r\n-//           <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//             Service Type *\r\n-//           </label>\r\n-//           <select\r\n-//             name=\"service\"\r\n-//             value={formData.service}\r\n-//             onChange={handleChange}\r\n-//             className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//               errors.service ? 'border-red-500' : 'border-gray-300'\r\n-//             }`}\r\n-//           >\r\n-//             <option value=\"\">Select a service</option>\r\n-//             {services.map((service, index) => (\r\n-//               <option key={index} value={service}>{service}</option>\r\n-//             ))}\r\n-//           </select>\r\n-//           {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n-//         </div>\r\n+        {/* Service Selection */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            Service Type *\r\n+          </label>\r\n+          <select\r\n+            name=\"service\"\r\n+            value={formData.service}\r\n+            onChange={handleChange}\r\n+            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+              errors.service ? 'border-red-500' : 'border-gray-300'\r\n+            }`}\r\n+          >\r\n+            <option value=\"\">Select a service</option>\r\n+            {services.map((service, index) => (\r\n+              <option key={index} value={service}>{service}</option>\r\n+            ))}\r\n+          </select>\r\n+          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n+        </div>\r\n \r\n-//         {/* Date and Time Selection */}\r\n-//         <div className=\"grid md:grid-cols-2 gap-4\">\r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <Calendar className=\"w-4 h-4 mr-2\" />\r\n-//               Preferred Date *\r\n-//             </label>\r\n-//             <input\r\n-//               type=\"date\"\r\n-//               name=\"date\"\r\n-//               value={formData.date}\r\n-//               onChange={handleChange}\r\n-//               min={getMinDate()}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.date ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//             />\r\n-//             {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n-//           </div>\r\n+        {/* Date and Time Selection */}\r\n+        <div className=\"grid md:grid-cols-2 gap-4\">\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Calendar className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Date *\r\n+            </label>\r\n+            <input\r\n+              type=\"date\"\r\n+              name=\"date\"\r\n+              value={formData.date}\r\n+              onChange={handleChange}\r\n+              min={getMinDate()}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.date ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            />\r\n+            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n+          </div>\r\n \r\n-//           <div>\r\n-//             <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//               <Clock className=\"w-4 h-4 mr-2\" />\r\n-//               Preferred Time *\r\n-//             </label>\r\n-//             <select\r\n-//               name=\"time\"\r\n-//               value={formData.time}\r\n-//               onChange={handleChange}\r\n-//               className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n-//                 errors.time ? 'border-red-500' : 'border-gray-300'\r\n-//               }`}\r\n-//             >\r\n-//               <option value=\"\">Select a time</option>\r\n-//               {timeSlots.map((time, index) => (\r\n-//                 <option key={index} value={time}>{time}</option>\r\n-//               ))}\r\n-//             </select>\r\n-//             {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n-//           </div>\r\n-//         </div>\r\n+          <div>\r\n+            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+              <Clock className=\"w-4 h-4 mr-2\" />\r\n+              Preferred Time *\r\n+            </label>\r\n+            <select\r\n+              name=\"time\"\r\n+              value={formData.time}\r\n+              onChange={handleChange}\r\n+              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n+                errors.time ? 'border-red-500' : 'border-gray-300'\r\n+              }`}\r\n+            >\r\n+              <option value=\"\">Select a time</option>\r\n+              {timeSlots.map((time, index) => (\r\n+                <option key={index} value={time}>{time}</option>\r\n+              ))}\r\n+            </select>\r\n+            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n+          </div>\r\n+        </div>\r\n \r\n-//         {/* Additional Notes */}\r\n-//         <div>\r\n-//           <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n-//             <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n-//             Additional Notes (Optional)\r\n-//           </label>\r\n-//           <textarea\r\n-//             name=\"notes\"\r\n-//             value={formData.notes}\r\n-//             onChange={handleChange}\r\n-//             rows={4}\r\n-//             className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n-//             placeholder=\"Any additional information or special requests...\"\r\n-//           />\r\n-//         </div>\r\n+        {/* Additional Notes */}\r\n+        <div>\r\n+          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n+            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n+            Additional Notes (Optional)\r\n+          </label>\r\n+          <textarea\r\n+            name=\"notes\"\r\n+            value={formData.notes}\r\n+            onChange={handleChange}\r\n+            rows={4}\r\n+            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n+            placeholder=\"Any additional information or special requests...\"\r\n+          />\r\n+        </div>\r\n \r\n-//         {/* Submit Button */}\r\n-//         <div className=\"pt-4\">\r\n-//           <button\r\n-//             onClick={handleSubmit}\r\n-//             className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n-//           >\r\n-//             Request Appointment\r\n-//           </button>\r\n-//         </div>\r\n-//       </div>\r\n+        {/* Submit Button */}\r\n+        <div className=\"pt-4\">\r\n+          <button\r\n+            onClick={handleSubmit}\r\n+            className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 px-6 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n+          >\r\n+            Request Appointment\r\n+          </button>\r\n+        </div>\r\n+      </div>\r\n \r\n     \r\n-//     </div>\r\n-//   );\r\n-// }\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1756022144245,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Calendar, Clock, User, Mail, Phone, MessageSquare, CheckCircle } from 'lucide-react';\r\n\r\nexport default function AppointmentForm() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    service: '',\r\n    date: '',\r\n    time: '',\r\n    notes: ''\r\n  });\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const services = [\r\n    'Consultation',\r\n    'Follow-up Appointment',\r\n    'Initial Assessment',\r\n    'Treatment Session',\r\n    'Review Meeting',\r\n    'Other'\r\n  ];\r\n\r\n  const timeSlots = [\r\n    '09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n    '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM', '02:00 PM', '02:30 PM',\r\n    '03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM'\r\n  ];\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\r\n    if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email';\r\n    }\r\n    if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';\r\n    if (!formData.service) newErrors.service = 'Please select a service';\r\n    if (!formData.date) newErrors.date = 'Please select a date';\r\n    if (!formData.time) newErrors.time = 'Please select a time';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateForm()) {\r\n      // Here you would typically send the data to your backend\r\n      console.log('Appointment data:', formData);\r\n      setIsSubmitted(true);\r\n      \r\n      // Reset form after 3 seconds\r\n      setTimeout(() => {\r\n        setIsSubmitted(false);\r\n        setFormData({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          phone: '',\r\n          service: '',\r\n          date: '',\r\n          time: '',\r\n          notes: ''\r\n        });\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getMinDate = () => {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0];\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto p-8 bg-white rounded-xl shadow-lg border\">\r\n        <div className=\"text-center\">\r\n          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Appointment Requested!</h2>\r\n          <p className=\"text-gray-600\">\r\n            Thank you for your appointment request. We'll contact you shortly to confirm your booking.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-xl shadow-lg border\">\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Book an Appointment</h1>\r\n        <p className=\"text-gray-600\">Please fill out the form below to schedule your appointment.</p>\r\n      </div>\r\n\r\n      <div className=\"space-y-6\">\r\n        {/* Personal Information */}\r\n        <div className=\"grid md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <User className=\"w-4 h-4 mr-2\" />\r\n              First Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={formData.firstName}\r\n              onChange={handleChange}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.firstName ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter your first name\"\r\n            />\r\n            {errors.firstName && <p className=\"mt-1 text-sm text-red-500\">{errors.firstName}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <User className=\"w-4 h-4 mr-2\" />\r\n              Last Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={formData.lastName}\r\n              onChange={handleChange}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.lastName ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter your last name\"\r\n            />\r\n            {errors.lastName && <p className=\"mt-1 text-sm text-red-500\">{errors.lastName}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contact Information */}\r\n        <div className=\"grid md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <Mail className=\"w-4 h-4 mr-2\" />\r\n              Email Address *\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.email ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            {errors.email && <p className=\"mt-1 text-sm text-red-500\">{errors.email}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <Phone className=\"w-4 h-4 mr-2\" />\r\n              Phone Number *\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              value={formData.phone}\r\n              onChange={handleChange}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.phone ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter your phone number\"\r\n            />\r\n            {errors.phone && <p className=\"mt-1 text-sm text-red-500\">{errors.phone}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Service Selection */}\r\n        <div>\r\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n            Service Type *\r\n          </label>\r\n          <select\r\n            name=\"service\"\r\n            value={formData.service}\r\n            onChange={handleChange}\r\n            className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n              errors.service ? 'border-red-500' : 'border-gray-300'\r\n            }`}\r\n          >\r\n            <option value=\"\">Select a service</option>\r\n            {services.map((service, index) => (\r\n              <option key={index} value={service}>{service}</option>\r\n            ))}\r\n          </select>\r\n          {errors.service && <p className=\"mt-1 text-sm text-red-500\">{errors.service}</p>}\r\n        </div>\r\n\r\n        {/* Date and Time Selection */}\r\n        <div className=\"grid md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <Calendar className=\"w-4 h-4 mr-2\" />\r\n              Preferred Date *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              value={formData.date}\r\n              onChange={handleChange}\r\n              min={getMinDate()}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.date ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n            />\r\n            {errors.date && <p className=\"mt-1 text-sm text-red-500\">{errors.date}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n              <Clock className=\"w-4 h-4 mr-2\" />\r\n              Preferred Time *\r\n            </label>\r\n            <select\r\n              name=\"time\"\r\n              value={formData.time}\r\n              onChange={handleChange}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors ${\r\n                errors.time ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <option value=\"\">Select a time</option>\r\n              {timeSlots.map((time, index) => (\r\n                <option key={index} value={time}>{time}</option>\r\n              ))}\r\n            </select>\r\n            {errors.time && <p className=\"mt-1 text-sm text-red-500\">{errors.time}</p>}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Additional Notes */}\r\n        <div>\r\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\r\n            <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n            Additional Notes (Optional)\r\n          </label>\r\n          <textarea\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            rows={4}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors resize-vertical\"\r\n            placeholder=\"Any additional information or special requests...\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"pt-4\">\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\r\n          >\r\n            Request Appointment\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 text-sm text-gray-500 text-center\">\r\n        * Required fields. We'll contact you within 24 hours to confirm your appointment.\r\n      </div>\r\n    </div>\r\n  );\r\n}"
        }
    ]
}