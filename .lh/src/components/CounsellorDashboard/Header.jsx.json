{
    "sourceFile": "src/components/CounsellorDashboard/Header.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1756294891441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1756294891441,
            "name": "Commit-0",
            "content": "import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Menu,\r\n  Bell,\r\n  User,\r\n  Settings,\r\n  Lock,\r\n  LogOut,\r\n  Edit3,\r\n  X,\r\n  Eye,\r\n  EyeOff,\r\n} from \"lucide-react\";\r\nimport { authService } from \"../../services/authService\";\r\n\r\n// Edit Profile Modal Component\r\nconst EditProfileModal = ({ isOpen, onClose, user, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n    role: user?.role || \"\",\r\n    phone: user?.phone || \"\",\r\n    department: user?.department || \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormData({\r\n        name: user.name || \"\",\r\n        email: user.email || \"\",\r\n        role: user.role || \"\",\r\n        phone: user.phone || \"\",\r\n        department: user.department || \"\",\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      onSave(formData);\r\n      setIsLoading(false);\r\n      onClose();\r\n    }, 1000);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Edit Profile</h3>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Full Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Enter your full name\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Email Address *\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Role\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"role\"\r\n                value={formData.role}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Enter your role\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Phone Number\r\n              </label>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Enter your phone number\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Department\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"department\"\r\n                value={formData.department}\r\n                onChange={handleInputChange}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                placeholder=\"Enter your department\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? \"Saving...\" : \"Save Changes\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst ChangePasswordModal = ({ isOpen, onClose, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPasswords, setShowPasswords] = useState({\r\n    current: false,\r\n    new: false,\r\n    confirm: false,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (errors[name]) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = (field) => {\r\n    setShowPasswords((prev) => ({\r\n      ...prev,\r\n      [field]: !prev[field],\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.currentPassword) {\r\n      newErrors.currentPassword = \"Current password is required\";\r\n    }\r\n\r\n    if (!formData.newPassword) {\r\n      newErrors.newPassword = \"New password is required\";\r\n    } else if (formData.newPassword.length < 8) {\r\n      newErrors.newPassword = \"Password must be at least 8 characters long\";\r\n    }\r\n\r\n    if (!formData.confirmPassword) {\r\n      newErrors.confirmPassword = \"Please confirm your new password\";\r\n    } else if (formData.newPassword !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      onSave({\r\n        currentPassword: formData.currentPassword,\r\n        newPassword: formData.newPassword,\r\n      });\r\n      setIsLoading(false);\r\n      setFormData({\r\n        currentPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n      });\r\n      onClose();\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    setErrors({});\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">\r\n            Change Password\r\n          </h3>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Current Password *\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.current ? \"text\" : \"password\"}\r\n                  name=\"currentPassword\"\r\n                  value={formData.currentPassword}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\r\n                    errors.currentPassword\r\n                      ? \"border-red-300\"\r\n                      : \"border-gray-300\"\r\n                  }`}\r\n                  placeholder=\"Enter current password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility(\"current\")}\r\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.current ? (\r\n                    <EyeOff className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <Eye className=\"w-4 h-4\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {errors.currentPassword && (\r\n                <p className=\"text-red-500 text-xs mt-1\">\r\n                  {errors.currentPassword}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                New Password *\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.new ? \"text\" : \"password\"}\r\n                  name=\"newPassword\"\r\n                  value={formData.newPassword}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\r\n                    errors.newPassword ? \"border-red-300\" : \"border-gray-300\"\r\n                  }`}\r\n                  placeholder=\"Enter new password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility(\"new\")}\r\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.new ? (\r\n                    <EyeOff className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <Eye className=\"w-4 h-4\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {errors.newPassword && (\r\n                <p className=\"text-red-500 text-xs mt-1\">\r\n                  {errors.newPassword}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Confirm New Password *\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type={showPasswords.confirm ? \"text\" : \"password\"}\r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-3 py-2 pr-10 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\r\n                    errors.confirmPassword\r\n                      ? \"border-red-300\"\r\n                      : \"border-gray-300\"\r\n                  }`}\r\n                  placeholder=\"Confirm new password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => togglePasswordVisibility(\"confirm\")}\r\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  {showPasswords.confirm ? (\r\n                    <EyeOff className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <Eye className=\"w-4 h-4\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {errors.confirmPassword && (\r\n                <p className=\"text-red-500 text-xs mt-1\">\r\n                  {errors.confirmPassword}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-md\">\r\n            <p className=\"text-xs text-blue-800\">\r\n              <strong>Password Requirements:</strong>\r\n              <br />• At least 8 characters long\r\n              <br />• Include uppercase and lowercase letters\r\n              <br />• Include at least one number\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClose}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isLoading ? \"Updating...\" : \"Update Password\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = ({\r\n  activeSection = \"dashboard\",\r\n  sidebarItems = [],\r\n  urgentReports = [],\r\n  adminUser = {},\r\n  onSidebarToggle = () => {},\r\n  onEditProfile = () => {},\r\n  onChangePassword = () => {},\r\n}) => {\r\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  const userMenuRef = useRef(null);\r\n\r\n  const activeLabel =\r\n    sidebarItems.find((item) => item.id === activeSection)?.label ||\r\n    \"Doctors Dashboard\";\r\n\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\r\n        setIsUserMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleUserMenuToggle = () => {\r\n    setIsUserMenuOpen(!isUserMenuOpen);\r\n  };\r\n\r\n  const handleMenuAction = async (action) => {\r\n    setIsUserMenuOpen(false);\r\n    if (action === \"edit\") {\r\n      setShowEditModal(true);\r\n    } else if (action === \"password\") {\r\n      setShowPasswordModal(true);\r\n    } else if (action === \"logout\") {\r\n      await authService.logoutUser();\r\n      // window.location.href = \"/login\";\r\n\r\n    }\r\n  };\r\n\r\n  const handleSaveProfile = (updatedProfile) => {\r\n    onEditProfile(updatedProfile);\r\n  };\r\n\r\n  const handleSavePassword = (passwordData) => {\r\n    onChangePassword(passwordData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between h-16 px-6\">\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              onClick={onSidebarToggle}\r\n              className=\"lg:hidden text-gray-600 hover:text-gray-900\"\r\n            >\r\n              <Menu className=\"w-6 h-6\" />\r\n            </button>\r\n            <h1 className=\"ml-4 lg:ml-0 text-xl font-semibold text-gray-900\">\r\n              {activeLabel}\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button className=\"relative p-2 text-gray-600 hover:text-gray-900\">\r\n              <Bell className=\"w-5 h-5\" />\r\n              {urgentReports.length > 0 && (\r\n                <span className=\"absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full\"></span>\r\n              )}\r\n            </button>\r\n\r\n            {/* User Profile Dropdown */}\r\n            <div className=\"relative\" ref={userMenuRef}>\r\n              <button\r\n                onClick={handleUserMenuToggle}\r\n                className=\"flex items-center space-x-2 p-1 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center\">\r\n                  <User className=\"w-4 h-4 text-white\" />\r\n                </div>\r\n                <span className=\"hidden md:inline text-sm font-medium text-gray-700\">\r\n                  {adminUser.username}\r\n                </span>\r\n              </button>\r\n\r\n              {/* Dropdown Menu */}\r\n              {isUserMenuOpen && (\r\n                <div className=\"absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50\">\r\n                  {/* User Info Section */}\r\n                  <div className=\"px-4 py-3 border-b border-gray-100\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center\">\r\n                        <User className=\"w-6 h-6 text-white\" />\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n                          {adminUser.username}\r\n                        </p>\r\n                        <p className=\"text-sm text-gray-500 truncate\">\r\n                          {adminUser.email}\r\n                        </p>\r\n                        {adminUser.role && (\r\n                          <p className=\"text-xs text-blue-600 font-medium\">\r\n                            {adminUser.role}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Menu Items */}\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      onClick={() => handleMenuAction(\"edit\")}\r\n                      className=\"w-full flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                      <Edit3 className=\"w-4 h-4 mr-3\" />\r\n                      Edit Profile\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => handleMenuAction(\"password\")}\r\n                      className=\"w-full flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                      <Lock className=\"w-4 h-4 mr-3\" />\r\n                      Change Password\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Logout Section */}\r\n                  <div className=\"border-t border-gray-100 py-1\">\r\n                    <button\r\n                      onClick={() => handleMenuAction(\"logout\")}\r\n                      className=\"w-full flex items-center px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors\"\r\n                    >\r\n                      <LogOut className=\"w-4 h-4 mr-3\" />\r\n                      Sign Out\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Modals */}\r\n      <EditProfileModal\r\n        isOpen={showEditModal}\r\n        onClose={() => setShowEditModal(false)}\r\n        user={adminUser}\r\n        onSave={handleSaveProfile}\r\n      />\r\n\r\n      <ChangePasswordModal\r\n        isOpen={showPasswordModal}\r\n        onClose={() => setShowPasswordModal(false)}\r\n        onSave={handleSavePassword}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"
        }
    ]
}