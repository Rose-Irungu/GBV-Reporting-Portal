{
    "sourceFile": "src/pages/Signup.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 60,
            "patches": [
                {
                    "date": 1752500234347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752500250598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,258 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-500 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+                <option value=\"admin\">Admin</option>\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752500262067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,258 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-00 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+                <option value=\"admin\">Admin</option>\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752818640439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n   }\r\n \r\n   return (\r\n     <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-00 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n         <div>\r\n           <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n           <p className=\"text-lg\">\r\n             You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n@@ -215,9 +215,9 @@\n                   errors.role ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               >\r\n                 <option value=\"\">Select your role</option>\r\n-                <option value=\"admin\">Admin</option>\r\n+               \r\n                 <option value=\"doctor\">Doctor</option>\r\n                 <option value=\"counselor\">Counselor</option>\r\n                 <option value=\"lawyer\">Lawyer</option>\r\n               </select>\r\n@@ -254,522 +254,5 @@\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-500 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-                <option value=\"admin\">Admin</option>\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2               className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n- text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-                <option value=\"admin\">Admin</option>\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753269084770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n \r\n export default function Signup() {\r\n   const [formData, setFormData] = useState({\r\n     name: \"\",\r\n@@ -78,9 +77,9 @@\n         password: \"\",\r\n         role: \"\",\r\n       });\r\n \r\n-      // Start countdown and redirect with visual counter\r\n+      // Start countdown\r\n       let timeLeft = 3;\r\n       setCountdown(timeLeft);\r\n       \r\n       const countdownInterval = setInterval(() => {\r\n@@ -100,140 +99,138 @@\n     }\r\n   };\r\n \r\n   const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n+    // In a real app, this would navigate to login\r\n+    console.log(\"Navigate to login\");\r\n   };\r\n \r\n   if (isSubmitted) {\r\n     return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n+      <div className=\"h-screen flex items-center justify-center bg-gray-100 p-4\">\r\n+        <div className=\"bg-white p-6 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+          <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n+            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+            </svg>\r\n           </div>\r\n+          <h2 className=\"text-xl font-bold mb-3 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+          <p className=\"text-gray-600 mb-4 text-sm\">{submitMessage}</p>\r\n+          <p className=\"text-xs text-gray-500 mb-4\">\r\n+            Redirecting to login in {countdown} seconds...\r\n+          </p>\r\n+          <button\r\n+            onClick={handleGoToLogin}\r\n+            className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-4 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+          >\r\n+            Go to Login Now\r\n+          </button>\r\n         </div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+    <div className=\"h-screen flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-6\">\r\n         <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n+          <h2 className=\"text-3xl font-bold mb-3\">Hello, Friend!</h2>\r\n+          <p className=\"text-base leading-relaxed\">\r\n             You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n           </p>\r\n         </div>\r\n       </div>\r\n \r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+      <div className=\"w-1/2 flex items-center justify-center p-6 bg-gray-100\">\r\n+        <div className=\"bg-white p-6 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-xl font-bold mb-4 text-[#5b3c5a]\">Sign Up</h2>\r\n \r\n-          <form onSubmit={handleSubmit}>\r\n+          <div>\r\n             {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+              <div className=\"mb-3 p-2 bg-red-100 border border-red-400 text-red-700 rounded text-sm\">\r\n                 {submitMessage}\r\n               </div>\r\n             )}\r\n \r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+            <div className=\"mb-3\">\r\n+              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Name</label>\r\n               <input\r\n                 type=\"text\"\r\n                 name=\"name\"\r\n                 value={formData.name}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n+                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n+                  errors.name ? \"border-red-500\" : \"border-gray-300\"\r\n                 }`}\r\n+                placeholder=\"Enter your full name\"\r\n               />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+              {errors.name && <p className=\"text-red-500 text-xs mt-1\">{errors.name}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+            <div className=\"mb-3\">\r\n+              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Email</label>\r\n               <input\r\n                 type=\"email\"\r\n                 name=\"email\"\r\n                 value={formData.email}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n+                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n+                  errors.email ? \"border-red-500\" : \"border-gray-300\"\r\n                 }`}\r\n+                placeholder=\"Enter your email address\"\r\n               />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+              {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+            <div className=\"mb-3\">\r\n+              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Password</label>\r\n               <input\r\n                 type=\"password\"\r\n                 name=\"password\"\r\n                 value={formData.password}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n+                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n+                  errors.password ? \"border-red-500\" : \"border-gray-300\"\r\n                 }`}\r\n+                placeholder=\"Create a password (min. 6 characters)\"\r\n               />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+              {errors.password && <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Role</label>\r\n               <select\r\n                 name=\"role\"\r\n                 value={formData.role}\r\n                 onChange={handleChange}\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n+                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n+                  errors.role ? \"border-red-500\" : \"border-gray-300\"\r\n                 }`}\r\n               >\r\n                 <option value=\"\">Select your role</option>\r\n-               \r\n                 <option value=\"doctor\">Doctor</option>\r\n                 <option value=\"counselor\">Counselor</option>\r\n                 <option value=\"lawyer\">Lawyer</option>\r\n               </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+              {errors.role && <p className=\"text-red-500 text-xs mt-1\">{errors.role}</p>}\r\n             </div>\r\n \r\n             <button\r\n-              type=\"submit\"\r\n+              onClick={handleSubmit}\r\n               disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2.5 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium\"\r\n             >\r\n               {isSubmitting ? (\r\n                 <div className=\"flex items-center justify-center\">\r\n                   <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                     fill=\"none\"\r\n                     viewBox=\"0 0 24 24\"\r\n                   >\r\n@@ -249,9 +246,9 @@\n               ) : (\r\n                 \"Create Account\"\r\n               )}\r\n             </button>\r\n-          </form>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1753269109344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n \r\n export default function Signup() {\r\n   const [formData, setFormData] = useState({\r\n     name: \"\",\r\n@@ -77,9 +78,9 @@\n         password: \"\",\r\n         role: \"\",\r\n       });\r\n \r\n-      // Start countdown\r\n+      // Start countdown and redirect with visual counter\r\n       let timeLeft = 3;\r\n       setCountdown(timeLeft);\r\n       \r\n       const countdownInterval = setInterval(() => {\r\n@@ -99,138 +100,140 @@\n     }\r\n   };\r\n \r\n   const handleGoToLogin = () => {\r\n-    // In a real app, this would navigate to login\r\n-    console.log(\"Navigate to login\");\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n   };\r\n \r\n   if (isSubmitted) {\r\n     return (\r\n-      <div className=\"h-screen flex items-center justify-center bg-gray-100 p-4\">\r\n-        <div className=\"bg-white p-6 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-          <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n-            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-            </svg>\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n           </div>\r\n-          <h2 className=\"text-xl font-bold mb-3 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-          <p className=\"text-gray-600 mb-4 text-sm\">{submitMessage}</p>\r\n-          <p className=\"text-xs text-gray-500 mb-4\">\r\n-            Redirecting to login in {countdown} seconds...\r\n-          </p>\r\n-          <button\r\n-            onClick={handleGoToLogin}\r\n-            className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-4 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-          >\r\n-            Go to Login Now\r\n-          </button>\r\n         </div>\r\n       </div>\r\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"h-screen flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-6\">\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n         <div>\r\n-          <h2 className=\"text-3xl font-bold mb-3\">Hello, Friend!</h2>\r\n-          <p className=\"text-base leading-relaxed\">\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n             You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n           </p>\r\n         </div>\r\n       </div>\r\n \r\n-      <div className=\"w-1/2 flex items-center justify-center p-6 bg-gray-100\">\r\n-        <div className=\"bg-white p-6 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-xl font-bold mb-4 text-[#5b3c5a]\">Sign Up</h2>\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n \r\n-          <div>\r\n+          <form onSubmit={handleSubmit}>\r\n             {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-3 p-2 bg-red-100 border border-red-400 text-red-700 rounded text-sm\">\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                 {submitMessage}\r\n               </div>\r\n             )}\r\n \r\n-            <div className=\"mb-3\">\r\n-              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Name</label>\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n               <input\r\n                 type=\"text\"\r\n                 name=\"name\"\r\n                 value={formData.name}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n-                  errors.name ? \"border-red-500\" : \"border-gray-300\"\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n                 }`}\r\n-                placeholder=\"Enter your full name\"\r\n               />\r\n-              {errors.name && <p className=\"text-red-500 text-xs mt-1\">{errors.name}</p>}\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-3\">\r\n-              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Email</label>\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n               <input\r\n                 type=\"email\"\r\n                 name=\"email\"\r\n                 value={formData.email}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n-                  errors.email ? \"border-red-500\" : \"border-gray-300\"\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n                 }`}\r\n-                placeholder=\"Enter your email address\"\r\n               />\r\n-              {errors.email && <p className=\"text-red-500 text-xs mt-1\">{errors.email}</p>}\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-3\">\r\n-              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Password</label>\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n               <input\r\n                 type=\"password\"\r\n                 name=\"password\"\r\n                 value={formData.password}\r\n                 onChange={handleChange}\r\n                 required\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n-                  errors.password ? \"border-red-500\" : \"border-gray-300\"\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n                 }`}\r\n-                placeholder=\"Create a password (min. 6 characters)\"\r\n               />\r\n-              {errors.password && <p className=\"text-red-500 text-xs mt-1\">{errors.password}</p>}\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n             </div>\r\n \r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1 text-sm font-medium\">Role</label>\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n               <select\r\n                 name=\"role\"\r\n                 value={formData.role}\r\n                 onChange={handleChange}\r\n                 disabled={isSubmitting}\r\n-                className={`w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-sm ${\r\n-                  errors.role ? \"border-red-500\" : \"border-gray-300\"\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               >\r\n                 <option value=\"\">Select your role</option>\r\n+               \r\n                 <option value=\"doctor\">Doctor</option>\r\n                 <option value=\"counselor\">Counselor</option>\r\n                 <option value=\"lawyer\">Lawyer</option>\r\n               </select>\r\n-              {errors.role && <p className=\"text-red-500 text-xs mt-1\">{errors.role}</p>}\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n             </div>\r\n \r\n             <button\r\n-              onClick={handleSubmit}\r\n+              type=\"submit\"\r\n               disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2.5 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed text-sm font-medium\"\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n             >\r\n               {isSubmitting ? (\r\n                 <div className=\"flex items-center justify-center\">\r\n                   <svg\r\n-                    className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\"\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                     fill=\"none\"\r\n                     viewBox=\"0 0 24 24\"\r\n                   >\r\n@@ -246,9 +249,9 @@\n               ) : (\r\n                 \"Create Account\"\r\n               )}\r\n             </button>\r\n-          </div>\r\n+          </form>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1753279903182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       );\r\n       setIsSubmitted(true);\r\n \r\n       setFormData({\r\n-        name: \"\",\r\n+        Fname: \"\",\r\n         email: \"\",\r\n         password: \"\",\r\n         role: \"\",\r\n       });\r\n"
                },
                {
                    "date": 1753279925268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,258 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        Firstname: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753279931389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753279938177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:''\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753279946506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      // Start countdown and redirect with visual counter\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753279974030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      \r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280024828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,260 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      \r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280033590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,260 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+import { signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      \r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    // In a real app, this would be: navigate(\"/signin\");\r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280092483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,260 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      \r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    \r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280161069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,267 @@\n+import React, { useState } from \"react\";\r\n+import { Link  } from 'react-router-dom';\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      // Simulate API call\r\n+      await submitReport({\r\n+  email: formData.email,\r\n+  password: formData.password,\r\n+  role: formData.role,\r\n+  first_name: formData.name.split(\" \")[0], // Optional name splitting\r\n+  last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n+});\r\n+\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name:\"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      \r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+      \r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+        \r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {\r\n+    \r\n+  };\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n+                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link> \r\n+                \r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+               \r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280170657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], // Optional name splitting\r\n+        last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280177943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280261492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    Firname: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280267286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280274064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    \r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280279487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    Lass\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280286133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    Last_name:\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280315659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+  \r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280896443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n import React, { useState } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n+import { Signup  } from \"../services/reportService\";\r\n \r\n export default function Signup() {\r\n   const [formData, setFormData] = useState({\r\n     First_name: \"\",\r\n-  \r\n     email: \"\",\r\n     password: \"\",\r\n     role: \"\",\r\n   });\r\n@@ -289,4643 +288,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    Last_name:\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    Lass\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    \r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    Firname: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], // Optional name splitting\r\n-        last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await submitReport({\r\n-  email: formData.email,\r\n-  password: formData.password,\r\n-  role: formData.role,\r\n-  first_name: formData.name.split(\" \")[0], // Optional name splitting\r\n-  last_name: formData.name.split(\" \")[1] || \"\", // Optional\r\n-});\r\n-\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      \r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    \r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      \r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    \r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-import { signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      \r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      \r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      \r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:\"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name:''\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        Firstname: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n-import React, { useState } from \"react\";\r\n-import { Link  } from 'react-router-dom';\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      // Simulate API call\r\n-      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        Fname: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      // Start countdown and redirect with visual counter\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-      \r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-        \r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {\r\n-    // In a real app, this would be: navigate(\"/signin\");\r\n-  };\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n-                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link> \r\n-                \r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-               \r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753280904858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { ignup  } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280923199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup  } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280928773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,291 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup, as submitSignup  } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+      await submitReport({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0], \r\n+        last_name: formData.name.split(\" \")[1] || \"\", \r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280969910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup, as submitSignup  } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+     as submitSignup\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753280981916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup, as submitSignup  } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+     await submitSignup({\r\n+  email: formData.email,\r\n+  password: formData.password,\r\n+  role: formData.role,\r\n+  first_name: formData.name.split(\" \")[0],\r\n+  last_name: formData.name.split(\" \")[1] || \"\",\r\n+});\r\n+\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281029578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,292 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      \r\n+     await submitSignup({\r\n+  email: formData.email,\r\n+  password: formData.password,\r\n+  role: formData.role,\r\n+  first_name: formData.name.split(\" \")[0],\r\n+  last_name: formData.name.split(\" \")[1] || \"\",\r\n+});\r\n+\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281045275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,884 +64,14 @@\n \r\n     try {\r\n       console.log(\"Form submitted:\", formData);\r\n \r\n-      \r\n-     await submitSignup({\r\n-  email: formData.email,\r\n-  password: formData.password,\r\n-  role: formData.role,\r\n-  first_name: formData.name.split(\" \")[0],\r\n-  last_name: formData.name.split(\" \")[1] || \"\",\r\n-});\r\n-\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup, as submitSignup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-     await submitSignup({\r\n-  email: formData.email,\r\n-  password: formData.password,\r\n-  role: formData.role,\r\n-  first_name: formData.name.split(\" \")[0],\r\n-  last_name: formData.name.split(\" \")[1] || \"\",\r\n-});\r\n-\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup, as submitSignup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-     as submitSignup\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup, as submitSignup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n+      await submitSignup({\r\n         email: formData.email,\r\n         password: formData.password,\r\n         role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n       });\r\n \r\n       setSubmitMessage(\r\n         `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n@@ -1157,877 +287,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { ignup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup  } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      \r\n-      await submitReport({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0], \r\n-        last_name: formData.name.split(\" \")[1] || \"\", \r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1753281070035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"..//reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281088578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/reportService\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281096795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { Signup } from \"../services/a\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281194710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import {  } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281309414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281315369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,290 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"name\"\r\n+                value={formData.name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281554407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,309 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+           <div className=\"mb-4\">\r\n+  <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+  <input\r\n+    type=\"text\"\r\n+    name=\"first_name\"\r\n+    value={formData.first_name}\r\n+    onChange={handleChange}\r\n+    required\r\n+    disabled={isSubmitting}\r\n+    className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+      errors.first_name ? \"border-red-500\" : \"\"\r\n+    }`}\r\n+  />\r\n+  {errors.first_name && (\r\n+    <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+  )}\r\n+</div>\r\n+\r\n+<div className=\"mb-4\">\r\n+  <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+  <input\r\n+    type=\"text\"\r\n+    name=\"last_name\"\r\n+    value={formData.last_name}\r\n+    onChange={handleChange}\r\n+    required\r\n+    disabled={isSubmitting}\r\n+    className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+      errors.last_name ? \"border-red-500\" : \"\"\r\n+    }`}\r\n+  />\r\n+  {errors.last_name && (\r\n+    <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+  )}\r\n+</div>\r\n+\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281595811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,308 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281742874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,308 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"F is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281748052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,308 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281816709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,308 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.name.trim()) {\r\n+      newErrors.name = \"Name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753281983348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+   if (!formData.first_name?.trim()) {\r\n+  newErrors.first_name = \"First name is required\";\r\n+}\r\n+\r\n+if (!formData.last_name?.trim()) {\r\n+  newErrors.last_name = \"Last name is required\";\r\n+}\r\n+\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753282001791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    First_name: \"\",\r\n+    \r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753282009348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753282015558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    l\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753282023894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name:\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753282030917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n export default function Signup() {\r\n   const [formData, setFormData] = useState({\r\n     first_name: \"\",\r\n-    last_name:\r\n+    last_name: \"\"\r\n     email: \"\",\r\n     password: \"\",\r\n     role: \"\",\r\n   });\r\n@@ -310,4827 +310,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    first_name: \"\",\r\n-    l\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.first_name?.trim()) {\r\n-      newErrors.first_name = \"First name is required\";\r\n-    }\r\n-\r\n-    if (!formData.last_name?.trim()) {\r\n-      newErrors.last_name = \"Last name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    first_name: \"\",\r\n-\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.first_name?.trim()) {\r\n-      newErrors.first_name = \"First name is required\";\r\n-    }\r\n-\r\n-    if (!formData.last_name?.trim()) {\r\n-      newErrors.last_name = \"Last name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    \r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.first_name?.trim()) {\r\n-      newErrors.first_name = \"First name is required\";\r\n-    }\r\n-\r\n-    if (!formData.last_name?.trim()) {\r\n-      newErrors.last_name = \"Last name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-   if (!formData.first_name?.trim()) {\r\n-  newErrors.first_name = \"First name is required\";\r\n-}\r\n-\r\n-if (!formData.last_name?.trim()) {\r\n-  newErrors.last_name = \"Last name is required\";\r\n-}\r\n-\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"First name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"F is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-           <div className=\"mb-4\">\r\n-  <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-  <input\r\n-    type=\"text\"\r\n-    name=\"first_name\"\r\n-    value={formData.first_name}\r\n-    onChange={handleChange}\r\n-    required\r\n-    disabled={isSubmitting}\r\n-    className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-      errors.first_name ? \"border-red-500\" : \"\"\r\n-    }`}\r\n-  />\r\n-  {errors.first_name && (\r\n-    <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-  )}\r\n-</div>\r\n-\r\n-<div className=\"mb-4\">\r\n-  <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-  <input\r\n-    type=\"text\"\r\n-    name=\"last_name\"\r\n-    value={formData.last_name}\r\n-    onChange={handleChange}\r\n-    required\r\n-    disabled={isSubmitting}\r\n-    className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-      errors.last_name ? \"border-red-500\" : \"\"\r\n-    }`}\r\n-  />\r\n-  {errors.last_name && (\r\n-    <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-  )}\r\n-</div>\r\n-\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import {  } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/a\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"..//reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { Signup } from \"../services/reportService\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    First_name: \"\",\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.name.trim()) {\r\n-      newErrors.name = \"Name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"name\"\r\n-                value={formData.name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1753282092566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      // console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753338863200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,11 +103,11 @@\n         }\r\n       }, 1000);\r\n     } catch (error) {\r\n       // console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n+      // setSubmitMessage(\r\n+      //   \"There was an error creating your account. Please try again.\"\r\n+      // );\r\n     } finally {\r\n       setIsSubmitting(false);\r\n     }\r\n   };\r\n@@ -310,317 +310,4 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n-import React, { useState } from \"react\";\r\n-import { Link } from \"react-router-dom\";\r\n-import { signup as submitSignup } from \"../services/auth\";\r\n-\r\n-export default function Signup() {\r\n-  const [formData, setFormData] = useState({\r\n-    first_name: \"\",\r\n-    last_name: \"\"\r\n-    email: \"\",\r\n-    password: \"\",\r\n-    role: \"\",\r\n-  });\r\n-\r\n-  const [isSubmitting, setIsSubmitting] = useState(false);\r\n-  const [isSubmitted, setIsSubmitted] = useState(false);\r\n-  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n-  const [errors, setErrors] = useState({});\r\n-  const [countdown, setCountdown] = useState(3);\r\n-\r\n-  const handleChange = (e) => {\r\n-    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n-\r\n-    if (errors[e.target.name]) {\r\n-      setErrors({ ...errors, [e.target.name]: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  const validateForm = () => {\r\n-    const newErrors = {};\r\n-\r\n-    if (!formData.first_name?.trim()) {\r\n-      newErrors.first_name = \"First name is required\";\r\n-    }\r\n-\r\n-    if (!formData.last_name?.trim()) {\r\n-      newErrors.last_name = \"Last name is required\";\r\n-    }\r\n-\r\n-    if (!formData.email.trim()) {\r\n-      newErrors.email = \"Email is required\";\r\n-    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n-      newErrors.email = \"Email is invalid\";\r\n-    }\r\n-\r\n-    if (!formData.password.trim()) {\r\n-      newErrors.password = \"Password is required\";\r\n-    } else if (formData.password.length < 6) {\r\n-      newErrors.password = \"Password must be at least 6 characters\";\r\n-    }\r\n-\r\n-    if (!formData.role.trim()) {\r\n-      newErrors.role = \"Please select a role\";\r\n-    }\r\n-\r\n-    setErrors(newErrors);\r\n-    return Object.keys(newErrors).length === 0;\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    if (!validateForm()) {\r\n-      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n-      return;\r\n-    }\r\n-\r\n-    setIsSubmitting(true);\r\n-    setSubmitMessage(\"\");\r\n-\r\n-    try {\r\n-      console.log(\"Form submitted:\", formData);\r\n-\r\n-      await submitSignup({\r\n-        email: formData.email,\r\n-        password: formData.password,\r\n-        role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n-        last_name: formData.name.split(\" \")[1] || \"\",\r\n-      });\r\n-\r\n-      setSubmitMessage(\r\n-        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n-      );\r\n-      setIsSubmitted(true);\r\n-\r\n-      setFormData({\r\n-        First_name: \"\",\r\n-        Last_name: \"\",\r\n-        email: \"\",\r\n-        password: \"\",\r\n-        role: \"\",\r\n-      });\r\n-\r\n-      let timeLeft = 3;\r\n-      setCountdown(timeLeft);\r\n-\r\n-      const countdownInterval = setInterval(() => {\r\n-        timeLeft -= 1;\r\n-        setCountdown(timeLeft);\r\n-\r\n-        if (timeLeft === 0) {\r\n-          clearInterval(countdownInterval);\r\n-        }\r\n-      }, 1000);\r\n-    } catch (error) {\r\n-      console.error(\"Submission error:\", error);\r\n-      setSubmitMessage(\r\n-        \"There was an error creating your account. Please try again.\"\r\n-      );\r\n-    } finally {\r\n-      setIsSubmitting(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleGoToLogin = () => {};\r\n-\r\n-  if (isSubmitted) {\r\n-    return (\r\n-      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n-        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n-          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n-            <div className=\"mb-6\">\r\n-              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n-                <svg\r\n-                  className=\"w-8 h-8 text-white\"\r\n-                  fill=\"none\"\r\n-                  stroke=\"currentColor\"\r\n-                  viewBox=\"0 0 24 24\"\r\n-                >\r\n-                  <path\r\n-                    strokeLinecap=\"round\"\r\n-                    strokeLinejoin=\"round\"\r\n-                    strokeWidth=\"2\"\r\n-                    d=\"M5 13l4 4L19 7\"\r\n-                  ></path>\r\n-                </svg>\r\n-              </div>\r\n-              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n-                Account Created Successfully!\r\n-              </h2>\r\n-              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n-              <p className=\"text-sm text-gray-500 mb-4\">\r\n-                Redirecting to login in {countdown} seconds...\r\n-              </p>\r\n-              <button\r\n-                onClick={handleGoToLogin}\r\n-                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n-              >\r\n-                <Link to=\"/Login\">Go to Login Now</Link>\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n-      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n-        <div>\r\n-          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n-          <p className=\"text-lg\">\r\n-            You're one step closer to supporting survivors. Create an admin or\r\n-            specialist account to begin.\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n-        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n-          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n-\r\n-          <form onSubmit={handleSubmit}>\r\n-            {submitMessage && !isSubmitted && (\r\n-              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n-                {submitMessage}\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"first_name\"\r\n-                value={formData.first_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.first_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.first_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n-              <input\r\n-                type=\"text\"\r\n-                name=\"last_name\"\r\n-                value={formData.last_name}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.last_name ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.last_name && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.email && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-4\">\r\n-              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"password\"\r\n-                value={formData.password}\r\n-                onChange={handleChange}\r\n-                required\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.password ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {errors.password && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <div className=\"mb-6\">\r\n-              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n-              <select\r\n-                name=\"role\"\r\n-                value={formData.role}\r\n-                onChange={handleChange}\r\n-                disabled={isSubmitting}\r\n-                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n-                  errors.role ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              >\r\n-                <option value=\"\">Select your role</option>\r\n-\r\n-                <option value=\"doctor\">Doctor</option>\r\n-                <option value=\"counselor\">Counselor</option>\r\n-                <option value=\"lawyer\">Lawyer</option>\r\n-              </select>\r\n-              {errors.role && (\r\n-                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={isSubmitting}\r\n-              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n-            >\r\n-              {isSubmitting ? (\r\n-                <div className=\"flex items-center justify-center\">\r\n-                  <svg\r\n-                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n-                    xmlns=\"http://www.w3.org/2000/svg\"\r\n-                    fill=\"none\"\r\n-                    viewBox=\"0 0 24 24\"\r\n-                  >\r\n-                    <circle\r\n-                      className=\"opacity-25\"\r\n-                      cx=\"12\"\r\n-                      cy=\"12\"\r\n-                      r=\"10\"\r\n-                      stroke=\"currentColor\"\r\n-                      strokeWidth=\"4\"\r\n-                    />\r\n-                    <path\r\n-                      className=\"opacity-75\"\r\n-                      fill=\"currentColor\"\r\n-                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n-                    ></path>\r\n-                  </svg>\r\n-                  Creating Account...\r\n-                </div>\r\n-              ) : (\r\n-                \"Create Account\"\r\n-              )}\r\n-            </button>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1753339360792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,12 +102,12 @@\n           clearInterval(countdownInterval);\r\n         }\r\n       }, 1000);\r\n     } catch (error) {\r\n-      // console.error(\"Submission error:\", error);\r\n-      // setSubmitMessage(\r\n-      //   \"There was an error creating your account. Please try again.\"\r\n-      // );\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n     } finally {\r\n       setIsSubmitting(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1753354451182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n       await submitSignup({\r\n         email: formData.email,\r\n         password: formData.password,\r\n         role: formData.role,\r\n-        first_name: formData.name.split(\" \")[0],\r\n+        first_name: formData(\" \")[0],\r\n         last_name: formData.name.split(\" \")[1] || \"\",\r\n       });\r\n \r\n       setSubmitMessage(\r\n"
                },
                {
                    "date": 1753354462942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n       await submitSignup({\r\n         email: formData.email,\r\n         password: formData.password,\r\n         role: formData.role,\r\n-        first_name: formData(\" \")[0],\r\n+        first_name: formData.name.split(\" \")[0],\r\n         last_name: formData.name.split(\" \")[1] || \"\",\r\n       });\r\n \r\n       setSubmitMessage(\r\n"
                },
                {
                    "date": 1753354470421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753354478512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.name.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753354569136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.firstname.split(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753354575316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.first_name.spli(\" \")[0],\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753354581846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.first_name,\r\n+        last_name: formData.name.split(\" \")[1] || \"\",\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        First_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1753354590525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         email: formData.email,\r\n         password: formData.password,\r\n         role: formData.role,\r\n         first_name: formData.first_name,\r\n-        last_name: formData.,\r\n+        last_name: formData.l,\r\n       });\r\n \r\n       setSubmitMessage(\r\n         `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n"
                },
                {
                    "date": 1753354600845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useState } from \"react\";\r\n+import { Link } from \"react-router-dom\";\r\n+import { signup as submitSignup } from \"../services/auth\";\r\n+\r\n+export default function Signup() {\r\n+  const [formData, setFormData] = useState({\r\n+    first_name: \"\",\r\n+    last_name: \"\",\r\n+    email: \"\",\r\n+    password: \"\",\r\n+    role: \"\",\r\n+  });\r\n+\r\n+  const [isSubmitting, setIsSubmitting] = useState(false);\r\n+  const [isSubmitted, setIsSubmitted] = useState(false);\r\n+  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n+  const [errors, setErrors] = useState({});\r\n+  const [countdown, setCountdown] = useState(3);\r\n+\r\n+  const handleChange = (e) => {\r\n+    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n+\r\n+    if (errors[e.target.name]) {\r\n+      setErrors({ ...errors, [e.target.name]: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  const validateForm = () => {\r\n+    const newErrors = {};\r\n+\r\n+    if (!formData.first_name?.trim()) {\r\n+      newErrors.first_name = \"First name is required\";\r\n+    }\r\n+\r\n+    if (!formData.last_name?.trim()) {\r\n+      newErrors.last_name = \"Last name is required\";\r\n+    }\r\n+\r\n+    if (!formData.email.trim()) {\r\n+      newErrors.email = \"Email is required\";\r\n+    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n+      newErrors.email = \"Email is invalid\";\r\n+    }\r\n+\r\n+    if (!formData.password.trim()) {\r\n+      newErrors.password = \"Password is required\";\r\n+    } else if (formData.password.length < 6) {\r\n+      newErrors.password = \"Password must be at least 6 characters\";\r\n+    }\r\n+\r\n+    if (!formData.role.trim()) {\r\n+      newErrors.role = \"Please select a role\";\r\n+    }\r\n+\r\n+    setErrors(newErrors);\r\n+    return Object.keys(newErrors).length === 0;\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!validateForm()) {\r\n+      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n+      return;\r\n+    }\r\n+\r\n+    setIsSubmitting(true);\r\n+    setSubmitMessage(\"\");\r\n+\r\n+    try {\r\n+      console.log(\"Form submitted:\", formData);\r\n+\r\n+      await submitSignup({\r\n+        email: formData.email,\r\n+        password: formData.password,\r\n+        role: formData.role,\r\n+        first_name: formData.first_name,\r\n+        last_name: formData.last_name,\r\n+      });\r\n+\r\n+      setSubmitMessage(\r\n+        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n+      );\r\n+      setIsSubmitted(true);\r\n+\r\n+      setFormData({\r\n+        irst_name: \"\",\r\n+        Last_name: \"\",\r\n+        email: \"\",\r\n+        password: \"\",\r\n+        role: \"\",\r\n+      });\r\n+\r\n+      let timeLeft = 3;\r\n+      setCountdown(timeLeft);\r\n+\r\n+      const countdownInterval = setInterval(() => {\r\n+        timeLeft -= 1;\r\n+        setCountdown(timeLeft);\r\n+\r\n+        if (timeLeft === 0) {\r\n+          clearInterval(countdownInterval);\r\n+        }\r\n+      }, 1000);\r\n+    } catch (error) {\r\n+      console.error(\"Submission error:\", error);\r\n+      setSubmitMessage(\r\n+        \"There was an error creating your account. Please try again.\"\r\n+      );\r\n+    } finally {\r\n+      setIsSubmitting(false);\r\n+    }\r\n+  };\r\n+\r\n+  const handleGoToLogin = () => {};\r\n+\r\n+  if (isSubmitted) {\r\n+    return (\r\n+      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n+        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n+          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n+            <div className=\"mb-6\">\r\n+              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n+                <svg\r\n+                  className=\"w-8 h-8 text-white\"\r\n+                  fill=\"none\"\r\n+                  stroke=\"currentColor\"\r\n+                  viewBox=\"0 0 24 24\"\r\n+                >\r\n+                  <path\r\n+                    strokeLinecap=\"round\"\r\n+                    strokeLinejoin=\"round\"\r\n+                    strokeWidth=\"2\"\r\n+                    d=\"M5 13l4 4L19 7\"\r\n+                  ></path>\r\n+                </svg>\r\n+              </div>\r\n+              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">\r\n+                Account Created Successfully!\r\n+              </h2>\r\n+              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n+              <p className=\"text-sm text-gray-500 mb-4\">\r\n+                Redirecting to login in {countdown} seconds...\r\n+              </p>\r\n+              <button\r\n+                onClick={handleGoToLogin}\r\n+                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n+              >\r\n+                <Link to=\"/Login\">Go to Login Now</Link>\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n+      <div className=\"w-1/2 bg-gradient-to-r from-purple-400 to-indigo-300 text-white flex items-center justify-center p-10\">\r\n+        <div>\r\n+          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n+          <p className=\"text-lg\">\r\n+            You're one step closer to supporting survivors. Create an admin or\r\n+            specialist account to begin.\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n+        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n+          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n+\r\n+          <form onSubmit={handleSubmit}>\r\n+            {submitMessage && !isSubmitted && (\r\n+              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n+                {submitMessage}\r\n+              </div>\r\n+            )}\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">First Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"first_name\"\r\n+                value={formData.first_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.first_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.first_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.first_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Last Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"last_name\"\r\n+                value={formData.last_name}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.last_name ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.last_name && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.last_name}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n+              <input\r\n+                type=\"email\"\r\n+                name=\"email\"\r\n+                value={formData.email}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.email ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.email && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-4\">\r\n+              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n+              <input\r\n+                type=\"password\"\r\n+                name=\"password\"\r\n+                value={formData.password}\r\n+                onChange={handleChange}\r\n+                required\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.password ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              />\r\n+              {errors.password && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"mb-6\">\r\n+              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n+              <select\r\n+                name=\"role\"\r\n+                value={formData.role}\r\n+                onChange={handleChange}\r\n+                disabled={isSubmitting}\r\n+                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n+                  errors.role ? \"border-red-500\" : \"\"\r\n+                }`}\r\n+              >\r\n+                <option value=\"\">Select your role</option>\r\n+\r\n+                <option value=\"doctor\">Doctor</option>\r\n+                <option value=\"counselor\">Counselor</option>\r\n+                <option value=\"lawyer\">Lawyer</option>\r\n+              </select>\r\n+              {errors.role && (\r\n+                <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <button\r\n+              type=\"submit\"\r\n+              disabled={isSubmitting}\r\n+              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n+            >\r\n+              {isSubmitting ? (\r\n+                <div className=\"flex items-center justify-center\">\r\n+                  <svg\r\n+                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n+                    xmlns=\"http://www.w3.org/2000/svg\"\r\n+                    fill=\"none\"\r\n+                    viewBox=\"0 0 24 24\"\r\n+                  >\r\n+                    <circle\r\n+                      className=\"opacity-25\"\r\n+                      cx=\"12\"\r\n+                      cy=\"12\"\r\n+                      r=\"10\"\r\n+                      stroke=\"currentColor\"\r\n+                      strokeWidth=\"4\"\r\n+                    />\r\n+                    <path\r\n+                      className=\"opacity-75\"\r\n+                      fill=\"currentColor\"\r\n+                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n+                    ></path>\r\n+                  </svg>\r\n+                  Creating Account...\r\n+                </div>\r\n+              ) : (\r\n+                \"Create Account\"\r\n+              )}\r\n+            </button>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1752500234347,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { Link  } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [countdown, setCountdown] = useState(3);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    if (errors[e.target.name]) {\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = \"Name is required\";\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = \"Email is invalid\";\r\n    }\r\n\r\n    if (!formData.password.trim()) {\r\n      newErrors.password = \"Password is required\";\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = \"Password must be at least 6 characters\";\r\n    }\r\n\r\n    if (!formData.role.trim()) {\r\n      newErrors.role = \"Please select a role\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setSubmitMessage(\"Please fill in all required fields correctly.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitMessage(\"\");\r\n\r\n    try {\r\n      console.log(\"Form submitted:\", formData);\r\n\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1500));\r\n\r\n      setSubmitMessage(\r\n        `Welcome ${formData.name}! Your ${formData.role} account has been created successfully.`\r\n      );\r\n      setIsSubmitted(true);\r\n\r\n      setFormData({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n      });\r\n\r\n      // Start countdown and redirect with visual counter\r\n      let timeLeft = 3;\r\n      setCountdown(timeLeft);\r\n      \r\n      const countdownInterval = setInterval(() => {\r\n        timeLeft -= 1;\r\n        setCountdown(timeLeft);\r\n        \r\n        if (timeLeft === 0) {\r\n          clearInterval(countdownInterval);\r\n        }\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error(\"Submission error:\", error);\r\n      setSubmitMessage(\"There was an error creating your account. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleGoToLogin = () => {\r\n    // In a real app, this would be: navigate(\"/signin\");\r\n  };\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"min-h-[80vh] p-8 pt-16 rounded-xl flex\">\r\n        <div className=\"w-full flex items-center justify-center bg-gray-100\">\r\n          <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md text-center\">\r\n            <div className=\"mb-6\">\r\n              <div className=\"w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n                </svg>\r\n              </div>\r\n              <h2 className=\"text-2xl font-bold mb-4 text-[#5b3c5a]\">Account Created Successfully!</h2>\r\n              <p className=\"text-gray-600 mb-6\">{submitMessage}</p>\r\n              <p className=\"text-sm text-gray-500 mb-4\">\r\n                Redirecting to login in {countdown} seconds...\r\n              </p>\r\n              <button\r\n                onClick={handleGoToLogin}\r\n                className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 px-6 rounded transition duration-200 ease-in-out transform hover:scale-105\"\r\n              >\r\n                <Link to=\"/Login\">Go to Login Now</Link> \r\n                \r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-[80vh] p-8 pt-16 top-[64px] rounded-xl flex\">\r\n      <div className=\"w-1/2               className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n text-white flex items-center justify-center p-10\">\r\n        <div>\r\n          <h2 className=\"text-4xl font-bold mb-4\">Hello, Friend!</h2>\r\n          <p className=\"text-lg\">\r\n            You're one step closer to supporting survivors. Create an admin or specialist account to begin.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"w-1/2 flex items-center justify-center p-10 bg-gray-100\">\r\n        <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n          <h2 className=\"text-2xl font-bold mb-6 text-[#5b3c5a]\">Sign Up</h2>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {submitMessage && !isSubmitted && (\r\n              <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                {submitMessage}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n                  errors.name ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name}</p>}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-1\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n                  errors.email ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n                  errors.password ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <label className=\"block text-gray-700 mb-1\">Role</label>\r\n              <select\r\n                name=\"role\"\r\n                value={formData.role}\r\n                onChange={handleChange}\r\n                disabled={isSubmitting}\r\n                className={`w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:bg-gray-100 disabled:cursor-not-allowed ${\r\n                  errors.role ? \"border-red-500\" : \"\"\r\n                }`}\r\n              >\r\n                <option value=\"\">Select your role</option>\r\n                <option value=\"admin\">Admin</option>\r\n                <option value=\"doctor\">Doctor</option>\r\n                <option value=\"counselor\">Counselor</option>\r\n                <option value=\"lawyer\">Lawyer</option>\r\n              </select>\r\n              {errors.role && <p className=\"text-red-500 text-sm mt-1\">{errors.role}</p>}\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-indigo-400 text-white py-2 rounded transition duration-200 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isSubmitting ? (\r\n                <div className=\"flex items-center justify-center\">\r\n                  <svg\r\n                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"\r\n                    ></path>\r\n                  </svg>\r\n                  Creating Account...\r\n                </div>\r\n              ) : (\r\n                \"Create Account\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"
        }
    ]
}