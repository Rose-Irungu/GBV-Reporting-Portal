{
    "sourceFile": "src/pages/Dashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753276383461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753276383461,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Search, Filter, Upload, Eye, Edit2, Clock, CheckCircle, AlertCircle, User, Calendar, MessageSquare, Phone, FileText, X } from 'lucide-react';\r\n\r\n// Mock data\r\nconst mockReports = [\r\n  {\r\n    id: 1,\r\n    title: \"Workplace Harassment Report\",\r\n    status: \"new\",\r\n    priority: \"high\",\r\n    assignedTo: null,\r\n    createdAt: \"2024-01-15\",\r\n    followUpStatus: \"contacted\",\r\n    description: \"Employee reported inappropriate behavior from supervisor\",\r\n    actions: [\r\n      { id: 1, type: \"contacted\", description: \"Initial contact made with victim\", timestamp: \"2024-01-15 10:00\", user: \"Admin\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Safety Violation\",\r\n    status: \"pending\",\r\n    priority: \"medium\",\r\n    assignedTo: \"john_doe\",\r\n    createdAt: \"2024-01-14\",\r\n    followUpStatus: \"services_offered\",\r\n    description: \"Safety equipment not provided in construction area\",\r\n    actions: [\r\n      { id: 1, type: \"contacted\", description: \"Victim contacted via phone\", timestamp: \"2024-01-14 14:30\", user: \"John Doe\" },\r\n      { id: 2, type: \"services_offered\", description: \"Safety training program offered\", timestamp: \"2024-01-15 09:00\", user: \"John Doe\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Discrimination Case\",\r\n    status: \"resolved\",\r\n    priority: \"high\",\r\n    assignedTo: \"jane_smith\",\r\n    createdAt: \"2024-01-10\",\r\n    followUpStatus: \"closed\",\r\n    description: \"Age discrimination in hiring process reported\",\r\n    actions: [\r\n      { id: 1, type: \"contacted\", description: \"Initial victim contact\", timestamp: \"2024-01-10 11:00\", user: \"Jane Smith\" },\r\n      { id: 2, type: \"counselling_scheduled\", description: \"Counselling session scheduled for Jan 12\", timestamp: \"2024-01-11 15:00\", user: \"Jane Smith\" },\r\n      { id: 3, type: \"in_progress\", description: \"Investigation ongoing\", timestamp: \"2024-01-12 10:00\", user: \"Jane Smith\" },\r\n      { id: 4, type: \"closed\", description: \"Case resolved - policy updated\", timestamp: \"2024-01-20 16:00\", user: \"Jane Smith\" }\r\n    ]\r\n  }\r\n];\r\n\r\nconst mockStaff = [\r\n  { id: \"john_doe\", name: \"John Doe\", role: \"Senior Investigator\" },\r\n  { id: \"jane_smith\", name: \"Jane Smith\", role: \"Case Manager\" },\r\n  { id: \"mike_wilson\", name: \"Mike Wilson\", role: \"Legal Advisor\" },\r\n  { id: \"sarah_connor\", name: \"Sarah Connor\", role: \"HR Specialist\" }\r\n];\r\n\r\n// Reusable Components\r\nconst StatusBadge = ({ status, className = \"\" }) => {\r\n  const statusConfig = {\r\n    new: { color: \"bg-blue-100 text-blue-800 border-blue-200\", icon: AlertCircle },\r\n    pending: { color: \"bg-yellow-100 text-yellow-800 border-yellow-200\", icon: Clock },\r\n    resolved: { color: \"bg-green-100 text-green-800 border-green-200\", icon: CheckCircle }\r\n  };\r\n\r\n  const config = statusConfig[status] || statusConfig.new;\r\n  const Icon = config.icon;\r\n\r\n  return (\r\n    <span className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium border ${config.color} ${className}`}>\r\n      <Icon size={12} />\r\n      {status.charAt(0).toUpperCase() + status.slice(1)}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst PriorityBadge = ({ priority }) => {\r\n  const colors = {\r\n    high: \"bg-red-100 text-red-800 border-red-200\",\r\n    medium: \"bg-orange-100 text-orange-800 border-orange-200\",\r\n    low: \"bg-gray-100 text-gray-800 border-gray-200\"\r\n  };\r\n\r\n  return (\r\n    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${colors[priority]}`}>\r\n      {priority.charAt(0).toUpperCase() + priority.slice(1)}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst ActionItem = ({ action, onUpdate }) => {\r\n  const actionTypes = {\r\n    contacted: { icon: Phone, color: \"text-blue-600\", label: \"Contacted\" },\r\n    counselling_scheduled: { icon: Calendar, color: \"text-green-600\", label: \"Counselling Scheduled\" },\r\n    services_offered: { icon: FileText, color: \"text-purple-600\", label: \"Services Offered\" },\r\n    in_progress: { icon: Clock, color: \"text-orange-600\", label: \"In Progress\" },\r\n    no_response: { icon: MessageSquare, color: \"text-gray-600\", label: \"No Response\" },\r\n    closed: { icon: CheckCircle, color: \"text-green-700\", label: \"Closed\" }\r\n  };\r\n\r\n  const config = actionTypes[action.type] || actionTypes.contacted;\r\n  const Icon = config.icon;\r\n\r\n  return (\r\n    <div className=\"flex items-start gap-3 p-3 bg-gray-50 rounded-lg\">\r\n      <div className={`p-2 rounded-full bg-white ${config.color}`}>\r\n        <Icon size={16} />\r\n      </div>\r\n      <div className=\"flex-1\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <span className=\"text-sm font-medium text-gray-900\">{config.label}</span>\r\n          <span className=\"text-xs text-gray-500\">{action.timestamp}</span>\r\n        </div>\r\n        <p className=\"text-sm text-gray-600 mt-1\">{action.description}</p>\r\n        <p className=\"text-xs text-gray-500 mt-1\">by {action.user}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FileUpload = ({ onFileUpload, reportId }) => {\r\n  const [dragActive, setDragActive] = useState(false);\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n      setDragActive(true);\r\n    } else if (e.type === \"dragleave\") {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      onFileUpload(e.dataTransfer.files[0], reportId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\r\n        dragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-gray-400'\r\n      }`}\r\n      onDragEnter={handleDrag}\r\n      onDragLeave={handleDrag}\r\n      onDragOver={handleDrag}\r\n      onDrop={handleDrop}\r\n    >\r\n      <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n      <div className=\"mt-4\">\r\n        <label htmlFor={`file-upload-${reportId}`} className=\"cursor-pointer\">\r\n          <span className=\"mt-2 block text-sm font-medium text-gray-900\">\r\n            Upload evidence files\r\n          </span>\r\n          <span className=\"mt-1 block text-sm text-gray-600\">\r\n            Drag and drop or click to browse\r\n          </span>\r\n        </label>\r\n        <input\r\n          id={`file-upload-${reportId}`}\r\n          name=\"file-upload\"\r\n          type=\"file\"\r\n          className=\"sr-only\"\r\n          onChange={(e) => onFileUpload(e.target.files[0], reportId)}\r\n          multiple\r\n          accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.txt\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReportDetailsModal = ({ report, isOpen, onClose, onUpdate }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    assignedTo: report?.assignedTo || '',\r\n    followUpStatus: report?.followUpStatus || 'contacted',\r\n    newAction: '',\r\n    actionType: 'contacted'\r\n  });\r\n\r\n  if (!isOpen || !report) return null;\r\n\r\n  const handleSubmit = () => {\r\n    onUpdate(report.id, formData);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const addAction = () => {\r\n    if (!formData.newAction.trim()) return;\r\n    \r\n    const newAction = {\r\n      id: Date.now(),\r\n      type: formData.actionType,\r\n      description: formData.newAction,\r\n      timestamp: new Date().toLocaleString(),\r\n      user: \"Current User\"\r\n    };\r\n    \r\n    onUpdate(report.id, { \r\n      ...formData, \r\n      newAction: newAction \r\n    });\r\n    \r\n    setFormData({ ...formData, newAction: '', actionType: 'contacted' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Report Details</h2>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button\r\n              onClick={() => setEditMode(!editMode)}\r\n              className=\"flex items-center gap-2 px-3 py-2 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n            >\r\n              <Edit2 size={16} />\r\n              {editMode ? 'Cancel Edit' : 'Edit Report'}\r\n            </button>\r\n            <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600\">\r\n              <X size={24} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Report Information */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Report Information</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">{report.title}</p>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">{report.description}</p>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n                      <div className=\"mt-1\">\r\n                        <StatusBadge status={report.status} />\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\r\n                      <div className=\"mt-1\">\r\n                        <PriorityBadge priority={report.priority} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Created</label>\r\n                    <p className=\"mt-1 text-sm text-gray-900\">{report.createdAt}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Update Form */}\r\n              {editMode && (\r\n                <div className=\"space-y-4 p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-gray-900\">Update Report</h4>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Assign To</label>\r\n                    <select\r\n                      value={formData.assignedTo}\r\n                      onChange={(e) => setFormData({ ...formData, assignedTo: e.target.value })}\r\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"\">Unassigned</option>\r\n                      {mockStaff.map(staff => (\r\n                        <option key={staff.id} value={staff.id}>{staff.name} - {staff.role}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Follow-up Status</label>\r\n                    <select\r\n                      value={formData.followUpStatus}\r\n                      onChange={(e) => setFormData({ ...formData, followUpStatus: e.target.value })}\r\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"contacted\">Contacted</option>\r\n                      <option value=\"services_offered\">Services Offered</option>\r\n                      <option value=\"in_progress\">In Progress</option>\r\n                      <option value=\"no_response\">No Response</option>\r\n                      <option value=\"closed\">Closed</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <button\r\n                    onClick={handleSubmit}\r\n                    className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700\"\r\n                  >\r\n                    Update Report\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {/* File Upload */}\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900 mb-3\">Evidence Files</h4>\r\n                <FileUpload \r\n                  onFileUpload={(file, reportId) => console.log('File uploaded:', file, reportId)}\r\n                  reportId={report.id}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Actions Timeline */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Actions Timeline</h3>\r\n              \r\n              {/* Add New Action */}\r\n              <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\r\n                <h4 className=\"font-medium text-gray-900 mb-3\">Add New Action</h4>\r\n                <div className=\"space-y-3\">\r\n                  <select\r\n                    value={formData.actionType}\r\n                    onChange={(e) => setFormData({ ...formData, actionType: e.target.value })}\r\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"contacted\">Victim Contacted</option>\r\n                    <option value=\"counselling_scheduled\">Counselling Scheduled</option>\r\n                    <option value=\"services_offered\">Services Offered</option>\r\n                    <option value=\"in_progress\">In Progress</option>\r\n                    <option value=\"no_response\">No Response</option>\r\n                    <option value=\"closed\">Closed</option>\r\n                  </select>\r\n                  \r\n                  <textarea\r\n                    value={formData.newAction}\r\n                    onChange={(e) => setFormData({ ...formData, newAction: e.target.value })}\r\n                    placeholder=\"Describe the action taken...\"\r\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    rows={3}\r\n                  />\r\n                  \r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={addAction}\r\n                    className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700\"\r\n                  >\r\n                    Add Action\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Actions List */}\r\n              <div className=\"space-y-3\">\r\n                {report.actions?.map(action => (\r\n                  <ActionItem key={action.id} action={action} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminDashboard = () => {\r\n  const [reports, setReports] = useState(mockReports);\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedReport, setSelectedReport] = useState(null);\r\n  const [showReportModal, setShowReportModal] = useState(false);\r\n\r\n  const filteredReports = reports.filter(report => {\r\n    const matchesStatus = selectedStatus === 'all' || report.status === selectedStatus;\r\n    const matchesSearch = report.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         report.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesStatus && matchesSearch;\r\n  });\r\n\r\n  const statusCounts = {\r\n    all: reports.length,\r\n    new: reports.filter(r => r.status === 'new').length,\r\n    pending: reports.filter(r => r.status === 'pending').length,\r\n    resolved: reports.filter(r => r.status === 'resolved').length\r\n  };\r\n\r\n  const handleViewReport = (report) => {\r\n    setSelectedReport(report);\r\n    setShowReportModal(true);\r\n  };\r\n\r\n  const handleUpdateReport = (reportId, updates) => {\r\n    setReports(prev => prev.map(report => {\r\n      if (report.id === reportId) {\r\n        const updated = { ...report, ...updates };\r\n        if (updates.newAction) {\r\n          updated.actions = [...(report.actions || []), updates.newAction];\r\n          delete updated.newAction;\r\n        }\r\n        return updated;\r\n      }\r\n      return report;\r\n    }));\r\n    \r\n    // Update selected report if it's the one being updated\r\n    if (selectedReport?.id === reportId) {\r\n      const updatedReport = reports.find(r => r.id === reportId);\r\n      setSelectedReport({ ...updatedReport, ...updates });\r\n    }\r\n  };\r\n\r\n  const getAssignedStaffName = (staffId) => {\r\n    const staff = mockStaff.find(s => s.id === staffId);\r\n    return staff ? staff.name : 'Unassigned';\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Admin Dashboard</h1>\r\n            <div className=\"flex items-center gap-4\">\r\n              <User className=\"text-gray-400\" size={20} />\r\n              <span className=\"text-sm text-gray-600\">Administrator</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          {Object.entries(statusCounts).map(([status, count]) => (\r\n            <div\r\n              key={status}\r\n              className={`bg-white p-6 rounded-lg shadow-sm border-2 cursor-pointer transition-colors ${\r\n                selectedStatus === status ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-gray-300'\r\n              }`}\r\n              onClick={() => setSelectedStatus(status)}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-600\">\r\n                    {status === 'all' ? 'Total Reports' : `${status.charAt(0).toUpperCase() + status.slice(1)} Reports`}\r\n                  </p>\r\n                  <p className=\"text-2xl font-bold text-gray-900\">{count}</p>\r\n                </div>\r\n                {status !== 'all' && <StatusBadge status={status} />}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm mb-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1 relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search reports...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Filter size={20} className=\"text-gray-400\" />\r\n              <select\r\n                value={selectedStatus}\r\n                onChange={(e) => setSelectedStatus(e.target.value)}\r\n                className=\"border border-gray-300 rounded-md px-3 py-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              >\r\n                <option value=\"all\">All Status</option>\r\n                <option value=\"new\">New</option>\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"resolved\">Resolved</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Reports Table */}\r\n        <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Report\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Priority\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Assigned To\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Follow-up\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Created\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredReports.map((report) => (\r\n                  <tr key={report.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-900\">{report.title}</div>\r\n                        <div className=\"text-sm text-gray-500 truncate max-w-xs\">{report.description}</div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <StatusBadge status={report.status} />\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <PriorityBadge priority={report.priority} />\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {getAssignedStaffName(report.assignedTo)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\r\n                        {report.followUpStatus.replace('_', ' ')}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {report.createdAt}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      <button\r\n                        onClick={() => handleViewReport(report)}\r\n                        className=\"text-blue-600 hover:text-blue-900 flex items-center gap-1\"\r\n                      >\r\n                        <Eye size={16} />\r\n                        View\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredReports.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <p className=\"text-gray-500\">No reports found matching your criteria.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Report Details Modal */}\r\n      <ReportDetailsModal\r\n        report={selectedReport}\r\n        isOpen={showReportModal}\r\n        onClose={() => {\r\n          setShowReportModal(false);\r\n          setSelectedReport(null);\r\n        }}\r\n        onUpdate={handleUpdateReport}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"
        }
    ]
}